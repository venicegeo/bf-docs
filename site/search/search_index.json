{
    "docs": [
        {
            "location": "/", 
            "text": "Automated Coastline Extraction\n\n\nWhat is Beachfront?\n\n\nBeachfront is a set of open-source cloud services that enables users to\nleverage detection algorithms and operational imagery sources to update global\ncoastline vectors. Users can exploit third-party imagery data using detection\nalgorithms to generate coastline vector data. It provides users the ability to\nautomatically extract large sections of coastline to produce timely, dynamic\ndata in support of multiple communities using the best-available source imagery.\nAlthough intended for shorelines, Beachfront can be modified to serve other\nfeature communities of interest to assist in automated feature and object\ndetection if other algorithms are available.\n\n\nBenefits of Beachfront\n\n\nPrevious shoreline extraction efforts used massive, infrequent efforts to digitize\nglobal shorelines. Beachfront drastically reduces the amount of time spent on manual\ndigitization of features, and allows for the constant update of feature data products on\ndemand.\n\n\n\n\nUsers can download only the imagery they need and obtain much more current\n    information for the specific sections of coast in which they are interested.\n\n\nThis app simplifies the process for the user by preventing the need to both\n    obtain large shapefiles and search through large outdated files. Users can\n    update coastline vector data as often as new source data is available.\n\n\nIts auto-extraction feature exports immediately to ArcMap or QGIS for editing.\n\n\n\n\nThe result is that users have more time to conduct analysis on other tasks.\n\n\nWhat type of data does Beachfront produce?\n\n\n\n\n\n\nBeachfront extracts shorelines by examining available imagery. The app\n    commonly uses imagery that includes PlanetScope and Rapid Eye data\n    (3-to-5-meter resolution). Beachfront outputs vector data, most commonly\n    for coastlines.\n\n\n\n\n\n\nBeachfront also captures data on cloud cover, resolution, tide, time of\n    collection, and more in the metadata of the output vectors. Users can export\n    this data as GeoJSON, GeoPackage, or Shapefile.\n\n\n\n\n\n\nImpact to mission\n\n\n\n\nReduced manual feature extraction time means more available time for other\n    tasks\n\n\nOn-demand products and tools reflect more current information by pulling\n    from multiple or the most recent datasets, rather than from dated,\n    mass-produced products\n\n\nScalable for use globally or in localized areas, depending on the mission\n\n\nTailored algorithms can be used for additional mission areas and feature\n    extraction types using the same architecture.\n\n\n\n\nHow can users access Beachfront?\n\n\nBeachfront is accessible through GEOINT services:\n\n\n\n\nJWICS: \nhttps://home.gs.ic.gov/\n\n\nNIPRnet: \nhttps://home.gs.mil", 
            "title": "Home"
        }, 
        {
            "location": "/#automated_coastline_extraction", 
            "text": "", 
            "title": "Automated Coastline Extraction"
        }, 
        {
            "location": "/#what_is_beachfront", 
            "text": "Beachfront is a set of open-source cloud services that enables users to\nleverage detection algorithms and operational imagery sources to update global\ncoastline vectors. Users can exploit third-party imagery data using detection\nalgorithms to generate coastline vector data. It provides users the ability to\nautomatically extract large sections of coastline to produce timely, dynamic\ndata in support of multiple communities using the best-available source imagery.\nAlthough intended for shorelines, Beachfront can be modified to serve other\nfeature communities of interest to assist in automated feature and object\ndetection if other algorithms are available.", 
            "title": "What is Beachfront?"
        }, 
        {
            "location": "/#benefits_of_beachfront", 
            "text": "Previous shoreline extraction efforts used massive, infrequent efforts to digitize\nglobal shorelines. Beachfront drastically reduces the amount of time spent on manual\ndigitization of features, and allows for the constant update of feature data products on\ndemand.   Users can download only the imagery they need and obtain much more current\n    information for the specific sections of coast in which they are interested.  This app simplifies the process for the user by preventing the need to both\n    obtain large shapefiles and search through large outdated files. Users can\n    update coastline vector data as often as new source data is available.  Its auto-extraction feature exports immediately to ArcMap or QGIS for editing.   The result is that users have more time to conduct analysis on other tasks.", 
            "title": "Benefits of Beachfront"
        }, 
        {
            "location": "/#what_type_of_data_does_beachfront_produce", 
            "text": "Beachfront extracts shorelines by examining available imagery. The app\n    commonly uses imagery that includes PlanetScope and Rapid Eye data\n    (3-to-5-meter resolution). Beachfront outputs vector data, most commonly\n    for coastlines.    Beachfront also captures data on cloud cover, resolution, tide, time of\n    collection, and more in the metadata of the output vectors. Users can export\n    this data as GeoJSON, GeoPackage, or Shapefile.", 
            "title": "What type of data does Beachfront produce?"
        }, 
        {
            "location": "/#impact_to_mission", 
            "text": "Reduced manual feature extraction time means more available time for other\n    tasks  On-demand products and tools reflect more current information by pulling\n    from multiple or the most recent datasets, rather than from dated,\n    mass-produced products  Scalable for use globally or in localized areas, depending on the mission  Tailored algorithms can be used for additional mission areas and feature\n    extraction types using the same architecture.", 
            "title": "Impact to mission"
        }, 
        {
            "location": "/#how_can_users_access_beachfront", 
            "text": "Beachfront is accessible through GEOINT services:   JWICS:  https://home.gs.ic.gov/  NIPRnet:  https://home.gs.mil", 
            "title": "How can users access Beachfront?"
        }, 
        {
            "location": "/userguide/", 
            "text": "User\ns Guide\n\n\nSearching for Scenes\n\n\n1. Navigate to the \nCreate Job\n Menu\n\n\nThe scene search is a part of the job creation workflow:\n\n\n\n\n2. Draw a Bounding Box to Define the Search Space\n\n\nDrawing a bounding box is a two-click process.  Click once to drop the first\ncorner and again to complete the bounding box:\n\n\n\n\n3. Adjust Search Criteria and then Execute Search\n\n\n\n\nNote:\n Dates should be entered in \nYYYY-MM-DD\n format, e.g., \n2017-07-04\n.\n\n\n\n\nMake any necessary adjustments to the imagery source, cloud cover, and date\nrange, and then click the \nSearch for Imagery\n button to execute a search using\nthe selected filtering criteria:\n\n\n\n\nAfter a moment, footprints of the scenes found in the catalog should render on\nthe map. You can readjust the filtering criteria and re-execute the search as\nmany times as you need:\n\n\n\n\n4. Click a Scene\ns Footprint to Bring up Metadata and a Preview\n\n\n\n\nNote\n: If the full-color preview does not load on the map, please contact\nthe Beachfront team for technical support.\n\n\n\n\n\n\nCreating a Job\n\n\n\n\nNote:\n Start from the end of the instructions for \nSearching for Scenes\n.\n\n\n\n\n1. After Picking a Scene, Find a Compatible Algorithm\n\n\nLook under the \nSelect Algorithm\n section to see what algorithms are available.\nSome algorithms have strict requirements in order to yield meaningful coastline vector data:\n\n\n\n\n\n\n\n2. After Picking an Algorithm, Submit the Scene for Processing\n\n\n\n\nNote\n: By default, Beachfront will name the job after the scene being\nprocessed.  You can optionally give a custom name to a job if desired.\n\n\n\n\n\n\n\n\n\nNote\n: Algorithm processing time may vary depending on the size/age of the\nscene (i.e., bigger scenes require more time to process and older scenes\nrequire more time to request from archives), as well as the Beachfront system\nload at the time of execution. If a scene takes longer to process than two\nhours, please contact the Beachfront team for technical support.\n\n\n\n\nTo submit the scene for algorithm processing, click the \nRun Algorithm\n button:\n\n\n\n\nViewing a Job\ns Results\n\n\n1. Navigate to the \nJobs\n Menu\n\n\nThe \nJobs\n menu will list the status and details for all jobs you are tracking:\n\n\n\n\n2. Find the Job you Want to View and then Click \nView on Map\n\n\n\n\nNote:\n You can also click any visible job frame directly on the map to \nselect\n it in the same way.\n\n\n\n\nSelecting a job from the \nJobs\n menu will pan and zoom the map to the job\ns frame:\n\n\n\n\n3. Shoreline Detections will Render for any Successful Job\n\n\n\n\nNote:\n If you select a job that is currently running, shoreline detections automatically appear once it successfully completes.  If this does not happen, please notify the Beachfront team for technical support.\n\n\n\n\nYou can also view extra information about a particular job by expanding the job\ns\nrow in the \nJobs\n menu:\n\n\n\n\n4. Click \nDownload\n Button to Download Detections in QGIS compatible formats\n\n\nYou can download the shoreline result in a few geospatial formats. They will\neach have a filename based on the source image. For example, using a Landsat8\nsource:\n\n\n\n\nGeoJSON - \nLC80150442018109LGN00.geojson\n\n\nGeoPackage - \nLC80150442018109LGN00.gpkg\n\n\nShapefile - \nLC80150442018109LGN00.zip\n (container for the multiple relevant files)\n\n\n\n\n\n\nRemoving a Job from your Jobs List\n\n\n1. Navigate to the \nJobs\n Menu\n\n\nThe \nJobs\n menu will list the status and details for all jobs you are tracking:\n\n\n\n\n2. Expand the Job\ns Details, then Click \nRemove this Job\n\n\n\n\nNote:\n The job does not get deleted from the system; it just won\nt show up in your tracking list anymore unless you visit that job\ns URL again.", 
            "title": "Beachfront"
        }, 
        {
            "location": "/userguide/#users_guide", 
            "text": "", 
            "title": "User's Guide"
        }, 
        {
            "location": "/userguide/#searching_for_scenes", 
            "text": "", 
            "title": "Searching for Scenes"
        }, 
        {
            "location": "/userguide/#1_navigate_to_the_create_job_menu", 
            "text": "The scene search is a part of the job creation workflow:", 
            "title": "1. Navigate to the Create Job Menu"
        }, 
        {
            "location": "/userguide/#2_draw_a_bounding_box_to_define_the_search_space", 
            "text": "Drawing a bounding box is a two-click process.  Click once to drop the first\ncorner and again to complete the bounding box:", 
            "title": "2. Draw a Bounding Box to Define the Search Space"
        }, 
        {
            "location": "/userguide/#3_adjust_search_criteria_and_then_execute_search", 
            "text": "Note:  Dates should be entered in  YYYY-MM-DD  format, e.g.,  2017-07-04 .   Make any necessary adjustments to the imagery source, cloud cover, and date\nrange, and then click the  Search for Imagery  button to execute a search using\nthe selected filtering criteria:   After a moment, footprints of the scenes found in the catalog should render on\nthe map. You can readjust the filtering criteria and re-execute the search as\nmany times as you need:", 
            "title": "3. Adjust Search Criteria and then Execute Search"
        }, 
        {
            "location": "/userguide/#4_click_a_scenes_footprint_to_bring_up_metadata_and_a_preview", 
            "text": "Note : If the full-color preview does not load on the map, please contact\nthe Beachfront team for technical support.", 
            "title": "4. Click a Scene's Footprint to Bring up Metadata and a Preview"
        }, 
        {
            "location": "/userguide/#creating_a_job", 
            "text": "Note:  Start from the end of the instructions for  Searching for Scenes .", 
            "title": "Creating a Job"
        }, 
        {
            "location": "/userguide/#1_after_picking_a_scene_find_a_compatible_algorithm", 
            "text": "Look under the  Select Algorithm  section to see what algorithms are available.\nSome algorithms have strict requirements in order to yield meaningful coastline vector data:", 
            "title": "1. After Picking a Scene, Find a Compatible Algorithm"
        }, 
        {
            "location": "/userguide/#2_after_picking_an_algorithm_submit_the_scene_for_processing", 
            "text": "Note : By default, Beachfront will name the job after the scene being\nprocessed.  You can optionally give a custom name to a job if desired.     Note : Algorithm processing time may vary depending on the size/age of the\nscene (i.e., bigger scenes require more time to process and older scenes\nrequire more time to request from archives), as well as the Beachfront system\nload at the time of execution. If a scene takes longer to process than two\nhours, please contact the Beachfront team for technical support.   To submit the scene for algorithm processing, click the  Run Algorithm  button:", 
            "title": "2. After Picking an Algorithm, Submit the Scene for Processing"
        }, 
        {
            "location": "/userguide/#viewing_a_jobs_results", 
            "text": "", 
            "title": "Viewing a Job's Results"
        }, 
        {
            "location": "/userguide/#1_navigate_to_the_jobs_menu", 
            "text": "The  Jobs  menu will list the status and details for all jobs you are tracking:", 
            "title": "1. Navigate to the Jobs Menu"
        }, 
        {
            "location": "/userguide/#2_find_the_job_you_want_to_view_and_then_click_view_on_map", 
            "text": "Note:  You can also click any visible job frame directly on the map to  select  it in the same way.   Selecting a job from the  Jobs  menu will pan and zoom the map to the job s frame:", 
            "title": "2. Find the Job you Want to View and then Click View on Map"
        }, 
        {
            "location": "/userguide/#3_shoreline_detections_will_render_for_any_successful_job", 
            "text": "Note:  If you select a job that is currently running, shoreline detections automatically appear once it successfully completes.  If this does not happen, please notify the Beachfront team for technical support.   You can also view extra information about a particular job by expanding the job s\nrow in the  Jobs  menu:", 
            "title": "3. Shoreline Detections will Render for any Successful Job"
        }, 
        {
            "location": "/userguide/#4_click_download_button_to_download_detections_in_qgis_compatible_formats", 
            "text": "You can download the shoreline result in a few geospatial formats. They will\neach have a filename based on the source image. For example, using a Landsat8\nsource:   GeoJSON -  LC80150442018109LGN00.geojson  GeoPackage -  LC80150442018109LGN00.gpkg  Shapefile -  LC80150442018109LGN00.zip  (container for the multiple relevant files)", 
            "title": "4. Click \"Download\" Button to Download Detections in QGIS compatible formats"
        }, 
        {
            "location": "/userguide/#removing_a_job_from_your_jobs_list", 
            "text": "", 
            "title": "Removing a Job from your Jobs List"
        }, 
        {
            "location": "/userguide/#1_navigate_to_the_jobs_menu_1", 
            "text": "The  Jobs  menu will list the status and details for all jobs you are tracking:", 
            "title": "1. Navigate to the Jobs Menu"
        }, 
        {
            "location": "/userguide/#2_expand_the_jobs_details_then_click_remove_this_job", 
            "text": "Note:  The job does not get deleted from the system; it just won t show up in your tracking list anymore unless you visit that job s URL again.", 
            "title": "2. Expand the Job's Details, then Click Remove this Job"
        }, 
        {
            "location": "/userguide/algorithms/", 
            "text": "Algorithms\n\n\nNDWI\n\n\nWhile bfalg-ndwi can be used as a Python library (as from the Beachfront web app),\nit can also be run using the Command Line Interface (CLI). Use the help switch\n(-h or \nhelp) to display inline help.\n\n\nThe parameters listed below may also be set through the Beachfront UI.\n\n\n$ python bfalg_ndwi.py -h\nusage: bfalg-ndwi [-h] -i INPUT [-b BANDS BANDS] [--outdir OUTDIR]\n                  [--basename BASENAME] [--l8bqa L8BQA] [--coastmask]\n                  [--minsize MINSIZE] [--close CLOSE] [--simple SIMPLE]\n                  [--verbose VERBOSE] [--version]\n\nBeachfront Algorithm: NDWI (v1.0.8)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        Input image (1 or 2 files) (default: None)\n  -b BANDS BANDS, --bands BANDS BANDS\n                        Band numbers for Green and NIR bands (default: [1, 1])\n  --outdir OUTDIR       Save intermediate files to this dir (otherwise temp)\n                        (default: )\n  --basename BASENAME   Basename to give to output files (no extension,\n                        defaults to first input filename (default: None)\n  --l8bqa L8BQA         Landat 8 Quality band (used to mask clouds) (default:\n                        None)\n  --coastmask           Mask non-coastline areas (default: False)\n  --minsize MINSIZE     Minimum coastline size (default: 100.0)\n  --close CLOSE         Close line strings within given pixels (default: 5)\n  --simple SIMPLE       Simplify using tolerance in map units (default: None)\n  --verbose VERBOSE     0: Quiet, 1: Debug, 2: Info, 3: Warn, 4: Error, 5:\n                        Critical (default: 2)\n  --version             Print version and exit\n\n\n\n\nIf a single filename is provided via the INPUT argument, then BANDS needs to be\nprovided to specify which bands in the file should be used. Otherwise it defaults\nto \n1, 1\n, meaning it would use the same band for both Green and NIR. This example\nuses the first band in the file as the Green band and the fifth as the NIR.\n\n\n$ bfalg-ndwi -i test1.tif -b 1 5\n\n\n\n\nIf the INPUT parameter is provided twice for two filenames, then BANDS is the band\nnumber for the first file (Green) and the second file (NIR). This example uses\nthe second band from the \ntest1.tif\n as the Green band, and the first band from\n\ntest2.tif\n as the NIR band.\n\n\n$ bfalg-ndwi -i test1.tif -i test2.tif -b 2 1\n\n\n\n\nInput files are all that are absolutely required, but a more typical scenario\nwould look like this (using the CLI):\n\n\n$ bfalg-ndwi -i scene123.tif -b 1 2 --basename testrun --outdir scene123-output --coastmask\n\n\n\n\nThis will apply the included buffered coastline (\nbfalg_ndwi/coastmask.shp\n) to\nthe image to mask out non-coastal regions. It will store all output files with\nthe name \ntestrun\n (+ additional tag and extension, e.g. \ntestrun.geojson\n,\n\ntestrun_otsu.TIF\n) in the directory \nscene123-output/\n.\n\n\nFor Landsat8: If the BQA band is available, it can be provided which will mask\nout the clouds from the scene.\n\n\n$ bfalg-ndwi -i LC80080282016215LGN00_B1.TIF -i LC80080282016215LGN00_B5.TIF --l8bqa LC80080282016215LGN00_BQA.TIF --basename LC80080282016215LGN00 --outdir LC80080282016215LGN00_test --coastmask\n\n\n\n\nThe last three remaining parametes are tuning parameters involving the creation\nof the vector output.\n\n\n\n\nminsize\n (100): This is the minimum size a linestring should be before being\n    filtered out. This corresponds to the \npotrace\n \nparameter\n\n    \n-t\n/\n--turdsize\n, and is not the length of the line but rather some measure\n    of the extent of it. The default of 10 will not filter out many lines. For\n    Landsat, a value of 100 works well at removing false coasts, but may also\n    remove islands or smaller incomplete shorelines.\n\n\nclose\n (5): Linestrings will be closed if their two endpoints are within this\n    number of pixels. The default is 5 and setting it to 0 will turn it off. This\n    should not be set to a value much higher than 10.\n\n\nsimplify\n (None): Simplification will not be done by default. If provided, it\n    is in units of degrees and is used to simplify and smooth the output.\n    Simplification is heavily application and source imagery dependent, and is a\n    lossy process. Consider starting points for RapidEye and PlanetScope data to be\n    0.00035, and  0.0007 for Landsat8.\n\n\n\n\nBand Combinations\n\n\nThe traditional NDWI algorithm uses the Green and NIR bands to calculate a\nnormalized difference index:\n\n\nNDWI = (green-nir) / (green+nir)\n\n\n\n\nThe band names Green and NIR are what is referenced to in the online help.\nHowever, other bands can work as well or even better on some instruments. The\nGreen band is a band that has a high water reflectance, while the NIR band is a\nband that has a very low water reflectance. The following bands are recommended.\n\n\n\n\n\n\n\n\nSensor\n\n\nGreen\n band\n\n\nNIR\n band\n\n\n\n\n\n\n\n\n\n\nLandsat8\n\n\n1 (Coastal)\n\n\n5 (NIR)\n\n\n\n\n\n\nRapidEye\n\n\n2 (Green)\n\n\n4 (NIR)\n\n\n\n\n\n\nPlanetScope\n\n\n2 (Green)\n\n\n4 (NIR)\n\n\n\n\n\n\nSentinel-2\n\n\n2 (Blue)\n\n\n8 (NIR)", 
            "title": "Algorithms"
        }, 
        {
            "location": "/userguide/algorithms/#algorithms", 
            "text": "", 
            "title": "Algorithms"
        }, 
        {
            "location": "/userguide/algorithms/#ndwi", 
            "text": "While bfalg-ndwi can be used as a Python library (as from the Beachfront web app),\nit can also be run using the Command Line Interface (CLI). Use the help switch\n(-h or  help) to display inline help.  The parameters listed below may also be set through the Beachfront UI.  $ python bfalg_ndwi.py -h\nusage: bfalg-ndwi [-h] -i INPUT [-b BANDS BANDS] [--outdir OUTDIR]\n                  [--basename BASENAME] [--l8bqa L8BQA] [--coastmask]\n                  [--minsize MINSIZE] [--close CLOSE] [--simple SIMPLE]\n                  [--verbose VERBOSE] [--version]\n\nBeachfront Algorithm: NDWI (v1.0.8)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        Input image (1 or 2 files) (default: None)\n  -b BANDS BANDS, --bands BANDS BANDS\n                        Band numbers for Green and NIR bands (default: [1, 1])\n  --outdir OUTDIR       Save intermediate files to this dir (otherwise temp)\n                        (default: )\n  --basename BASENAME   Basename to give to output files (no extension,\n                        defaults to first input filename (default: None)\n  --l8bqa L8BQA         Landat 8 Quality band (used to mask clouds) (default:\n                        None)\n  --coastmask           Mask non-coastline areas (default: False)\n  --minsize MINSIZE     Minimum coastline size (default: 100.0)\n  --close CLOSE         Close line strings within given pixels (default: 5)\n  --simple SIMPLE       Simplify using tolerance in map units (default: None)\n  --verbose VERBOSE     0: Quiet, 1: Debug, 2: Info, 3: Warn, 4: Error, 5:\n                        Critical (default: 2)\n  --version             Print version and exit  If a single filename is provided via the INPUT argument, then BANDS needs to be\nprovided to specify which bands in the file should be used. Otherwise it defaults\nto  1, 1 , meaning it would use the same band for both Green and NIR. This example\nuses the first band in the file as the Green band and the fifth as the NIR.  $ bfalg-ndwi -i test1.tif -b 1 5  If the INPUT parameter is provided twice for two filenames, then BANDS is the band\nnumber for the first file (Green) and the second file (NIR). This example uses\nthe second band from the  test1.tif  as the Green band, and the first band from test2.tif  as the NIR band.  $ bfalg-ndwi -i test1.tif -i test2.tif -b 2 1  Input files are all that are absolutely required, but a more typical scenario\nwould look like this (using the CLI):  $ bfalg-ndwi -i scene123.tif -b 1 2 --basename testrun --outdir scene123-output --coastmask  This will apply the included buffered coastline ( bfalg_ndwi/coastmask.shp ) to\nthe image to mask out non-coastal regions. It will store all output files with\nthe name  testrun  (+ additional tag and extension, e.g.  testrun.geojson , testrun_otsu.TIF ) in the directory  scene123-output/ .  For Landsat8: If the BQA band is available, it can be provided which will mask\nout the clouds from the scene.  $ bfalg-ndwi -i LC80080282016215LGN00_B1.TIF -i LC80080282016215LGN00_B5.TIF --l8bqa LC80080282016215LGN00_BQA.TIF --basename LC80080282016215LGN00 --outdir LC80080282016215LGN00_test --coastmask  The last three remaining parametes are tuning parameters involving the creation\nof the vector output.   minsize  (100): This is the minimum size a linestring should be before being\n    filtered out. This corresponds to the  potrace   parameter \n     -t / --turdsize , and is not the length of the line but rather some measure\n    of the extent of it. The default of 10 will not filter out many lines. For\n    Landsat, a value of 100 works well at removing false coasts, but may also\n    remove islands or smaller incomplete shorelines.  close  (5): Linestrings will be closed if their two endpoints are within this\n    number of pixels. The default is 5 and setting it to 0 will turn it off. This\n    should not be set to a value much higher than 10.  simplify  (None): Simplification will not be done by default. If provided, it\n    is in units of degrees and is used to simplify and smooth the output.\n    Simplification is heavily application and source imagery dependent, and is a\n    lossy process. Consider starting points for RapidEye and PlanetScope data to be\n    0.00035, and  0.0007 for Landsat8.", 
            "title": "NDWI"
        }, 
        {
            "location": "/userguide/algorithms/#band_combinations", 
            "text": "The traditional NDWI algorithm uses the Green and NIR bands to calculate a\nnormalized difference index:  NDWI = (green-nir) / (green+nir)  The band names Green and NIR are what is referenced to in the online help.\nHowever, other bands can work as well or even better on some instruments. The\nGreen band is a band that has a high water reflectance, while the NIR band is a\nband that has a very low water reflectance. The following bands are recommended.     Sensor  Green  band  NIR  band      Landsat8  1 (Coastal)  5 (NIR)    RapidEye  2 (Green)  4 (NIR)    PlanetScope  2 (Green)  4 (NIR)    Sentinel-2  2 (Blue)  8 (NIR)", 
            "title": "Band Combinations"
        }, 
        {
            "location": "/userguide/tide-prediction/", 
            "text": "Tide Prediction\n\n\nDescription\n\n\nBf-tideprediction is a Beachfront service that estimates the tide level for a\ngiven date/time, as well as the 24-hour min/max tides and corresponding times\nsurrounding that date/time.  This service is used by Beachfront to provide\ncontextual information to be used in conjunction with Beachfront\u2019s shoreline\nextraction services.\n\n\nWhy are tides important for shoreline extraction?\n\n\nThe shoreline can be drastically different depending on the status of the tides\nat the time the imagery was captured. For example:\n\n\n\n\nWhy create a new tide service instead of using a third-party service?\n\n\n\n\nLimited API access\n\n\nMost services offer either historic tide data or predict future tides but not both\n\n\nCost - best services require user subscriptions\n\n\nQuery locations visible to third party\n\n\nInability to migrate to classified environment\n\n\nReliance on third party server availability\n\n\n\n\nOperation\n\n\nBf-tideprediction works in both individual and batch modes.\n\n\nIndividual Query Mode:\n\n\nAPI\n\n\nThe individual mode has an API endpoint of\n\nhttps://bf-tideprediction.geointservices.io\n and accepts the following keys\nin a POST request:\n\n\n\n\n\n\n\n\nKeys\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nlat\n\n\ndecimal degrees between -90 and 90\n\n\n\n\n\n\nlon\n\n\ndecimal degrees between -180 and 180\n\n\n\n\n\n\ndtg\n\n\nDate/Time in format : YYYY-MM-DD-HH-MM (Universal Standard Time)\n\n\n\n\n\n\n\n\nSample Query:\n\n\ncurl -X POST -d 'lat=-33.85\nlon=151\ndtg=2016-05-31-0-1' \nhttps://bf-tideprediction.geointservices.io/\n\n\n\n\n\nWeb Interface\n\n\nThe individual query mode also has a web-based form.  Enter coordinates in\ndecimal degrees, and provide the date and time in the format \nYYYY-mm-DD-HH-MM\n\nin UST.  Select \u201cCalculate\u201d and the results will be returned in the browser as\na json file.\n\n\n\n\nBatch Queries\n\n\nThe API also supports querying for batch collections of locations. To do so,\nuse a JSON body structured in this way:\n\n\n{\n  \nlocations\n: [\n    {\n      \ndtg\n: \nsome_dtg1\n,\n      \nlat\n: \nsome_lat1\n,\n      \nlon\n: \nsome_lon1\n\n    },\n    {\n      \ndtg\n: \nsome_dtg2\n,\n      \nlat\n: \nsome_lat2\n,\n      \nlon\n: \nsome_lon2\n\n    }\n  ]\n}\n\n\n\n\nSample Query:\n\n\ncurl -X POST -H \nContent-Type: application/json\n  -d '{\nlocations\n: [{\nlat\n: \\73.63008647322661, \nlon\n: -81.5557487110026, \ndtg\n: \n2015-12-20-09-36\n}]}' \nhttps://tideprediction.stage.geointservices.io/tides\n\n\n\n\n\nAlgorithm\n\n\nBeachfront\u2019s Tide Prediction service utilizes the Python library\n\npytides\n to predict past and future\ntides.  These predictions are based upon harmonic constituents estimated from\nhistorical sea level buoy data. The service accepts a latitude/longitude pair\nand a Date Time Group (DTG) and returns the current tide level at that time, as\nwell as the minimum and maximum of the 24-hour period following the time.\n\n\nAccording to their documentation, \npytide\ns tidal prediction is based upon\nseveral fundamental assumptions.  The first assumption is that tides anywhere\non Earth are caused solely by the gravitational forces of the moon and the sun.\nPytides neglects the gravitational forces of other planetary bodies, as their\neffect on the tide is several orders of magnitude weaker than those of the moon\nand sun.  The second assumption is that for any given location on Earth, there\nexists constant values such that the tide there obeys this relation.  So if we\nhave many past measurements of the tide at a given location, we can attempt to\nchoose values that best fit our previous readings. By assumption, we can then\npredict the future tide by allowing it to increase into the future.\n\n\n\n\nBeachfront\ns Tide Prediction service obtains these historic measurements by\nquerying the GLOSS buoy network.  The service takes latitude and longitude\ncoordinates, as well as a DTG.  A lookup table hosted by bf-tideprediction\ncalculates the station ID for the appropriate sea level monitoring stations.\nUtilizing a locally stored database of historic sea level data, constituents\nare calculated for each appropriate station.  The tides are then predicted for\nthose stations in a 24 hour period surrounding the image DTG on a minute by\nminute basis.  These data points are interpolated to provide sea level height\nfor the image DTG, and a minimum and maximum tide height for a given time\nperiod.\n\n\n\n\nGloss Buoy Locations\n\n\n\n\nDensity Map of Gloss Buoy Locations\n\n\nA lookup table hosted by \nbf-tideprediction\n calculates the station ID for the\nappropriate sea level monitoring stations by querying the coordinates against a\npre-computed set of Voronoi polygons.  In mathematics, a Voronoi diagram is a\npartitioning of a plane into regions based on distance to points in a specific\nsubset of the plane.  For each initial point (or seed), there is a\ncorresponding polygon consisting of all points closer to that seed than to any\nother. These regions are called Voronoi cells.  For the Beachfront Tide\nPrediction service, a one-time calculation of Voronoi polygons was generated\nfor the Gloss Buoy data.  For a given coordinate, the corresponding known point\nis queried  This is simpler than triangulating between the points of a Delaunay\ntriangle, but may be less accurate as its based on a single known point.\n\n\n\n\n\n\nSource: \nhttps://commons.wikimedia.org/wiki/File:Euclidean_Voronoi_diagram.svg", 
            "title": "Tide Prediction"
        }, 
        {
            "location": "/userguide/tide-prediction/#tide_prediction", 
            "text": "", 
            "title": "Tide Prediction"
        }, 
        {
            "location": "/userguide/tide-prediction/#description", 
            "text": "Bf-tideprediction is a Beachfront service that estimates the tide level for a\ngiven date/time, as well as the 24-hour min/max tides and corresponding times\nsurrounding that date/time.  This service is used by Beachfront to provide\ncontextual information to be used in conjunction with Beachfront\u2019s shoreline\nextraction services.", 
            "title": "Description"
        }, 
        {
            "location": "/userguide/tide-prediction/#why_are_tides_important_for_shoreline_extraction", 
            "text": "The shoreline can be drastically different depending on the status of the tides\nat the time the imagery was captured. For example:", 
            "title": "Why are tides important for shoreline extraction?"
        }, 
        {
            "location": "/userguide/tide-prediction/#why_create_a_new_tide_service_instead_of_using_a_third-party_service", 
            "text": "Limited API access  Most services offer either historic tide data or predict future tides but not both  Cost - best services require user subscriptions  Query locations visible to third party  Inability to migrate to classified environment  Reliance on third party server availability", 
            "title": "Why create a new tide service instead of using a third-party service?"
        }, 
        {
            "location": "/userguide/tide-prediction/#operation", 
            "text": "Bf-tideprediction works in both individual and batch modes.", 
            "title": "Operation"
        }, 
        {
            "location": "/userguide/tide-prediction/#individual_query_mode", 
            "text": "", 
            "title": "Individual Query Mode:"
        }, 
        {
            "location": "/userguide/tide-prediction/#api", 
            "text": "The individual mode has an API endpoint of https://bf-tideprediction.geointservices.io  and accepts the following keys\nin a POST request:     Keys  Description      lat  decimal degrees between -90 and 90    lon  decimal degrees between -180 and 180    dtg  Date/Time in format : YYYY-MM-DD-HH-MM (Universal Standard Time)     Sample Query:  curl -X POST -d 'lat=-33.85 lon=151 dtg=2016-05-31-0-1'  https://bf-tideprediction.geointservices.io/", 
            "title": "API"
        }, 
        {
            "location": "/userguide/tide-prediction/#web_interface", 
            "text": "The individual query mode also has a web-based form.  Enter coordinates in\ndecimal degrees, and provide the date and time in the format  YYYY-mm-DD-HH-MM \nin UST.  Select \u201cCalculate\u201d and the results will be returned in the browser as\na json file.", 
            "title": "Web Interface"
        }, 
        {
            "location": "/userguide/tide-prediction/#batch_queries", 
            "text": "The API also supports querying for batch collections of locations. To do so,\nuse a JSON body structured in this way:  {\n   locations : [\n    {\n       dtg :  some_dtg1 ,\n       lat :  some_lat1 ,\n       lon :  some_lon1 \n    },\n    {\n       dtg :  some_dtg2 ,\n       lat :  some_lat2 ,\n       lon :  some_lon2 \n    }\n  ]\n}  Sample Query:  curl -X POST -H  Content-Type: application/json   -d '{ locations : [{ lat : \\73.63008647322661,  lon : -81.5557487110026,  dtg :  2015-12-20-09-36 }]}'  https://tideprediction.stage.geointservices.io/tides", 
            "title": "Batch Queries"
        }, 
        {
            "location": "/userguide/tide-prediction/#algorithm", 
            "text": "Beachfront\u2019s Tide Prediction service utilizes the Python library pytides  to predict past and future\ntides.  These predictions are based upon harmonic constituents estimated from\nhistorical sea level buoy data. The service accepts a latitude/longitude pair\nand a Date Time Group (DTG) and returns the current tide level at that time, as\nwell as the minimum and maximum of the 24-hour period following the time.  According to their documentation,  pytide s tidal prediction is based upon\nseveral fundamental assumptions.  The first assumption is that tides anywhere\non Earth are caused solely by the gravitational forces of the moon and the sun.\nPytides neglects the gravitational forces of other planetary bodies, as their\neffect on the tide is several orders of magnitude weaker than those of the moon\nand sun.  The second assumption is that for any given location on Earth, there\nexists constant values such that the tide there obeys this relation.  So if we\nhave many past measurements of the tide at a given location, we can attempt to\nchoose values that best fit our previous readings. By assumption, we can then\npredict the future tide by allowing it to increase into the future.   Beachfront s Tide Prediction service obtains these historic measurements by\nquerying the GLOSS buoy network.  The service takes latitude and longitude\ncoordinates, as well as a DTG.  A lookup table hosted by bf-tideprediction\ncalculates the station ID for the appropriate sea level monitoring stations.\nUtilizing a locally stored database of historic sea level data, constituents\nare calculated for each appropriate station.  The tides are then predicted for\nthose stations in a 24 hour period surrounding the image DTG on a minute by\nminute basis.  These data points are interpolated to provide sea level height\nfor the image DTG, and a minimum and maximum tide height for a given time\nperiod.", 
            "title": "Algorithm"
        }, 
        {
            "location": "/userguide/tide-prediction/#gloss_buoy_locations", 
            "text": "", 
            "title": "Gloss Buoy Locations"
        }, 
        {
            "location": "/userguide/tide-prediction/#density_map_of_gloss_buoy_locations", 
            "text": "A lookup table hosted by  bf-tideprediction  calculates the station ID for the\nappropriate sea level monitoring stations by querying the coordinates against a\npre-computed set of Voronoi polygons.  In mathematics, a Voronoi diagram is a\npartitioning of a plane into regions based on distance to points in a specific\nsubset of the plane.  For each initial point (or seed), there is a\ncorresponding polygon consisting of all points closer to that seed than to any\nother. These regions are called Voronoi cells.  For the Beachfront Tide\nPrediction service, a one-time calculation of Voronoi polygons was generated\nfor the Gloss Buoy data.  For a given coordinate, the corresponding known point\nis queried  This is simpler than triangulating between the points of a Delaunay\ntriangle, but may be less accurate as its based on a single known point.    Source:  https://commons.wikimedia.org/wiki/File:Euclidean_Voronoi_diagram.svg", 
            "title": "Density Map of Gloss Buoy Locations"
        }, 
        {
            "location": "/userguide/metrics/", 
            "text": "table:nth-of-type(1) {\n    display:table;\n    width:100%;\n}\ntable:nth-of-type(1) th:nth-of-type(2) {\n    width:70%;\n}\n\n.col-md-9 img {\n   margin-top:10px;\n   margin-bottom:15px;\n   margin-left:35px;\n   margin-right:100%;\n   float: left;\n}\n.col-md-9 img[alt=login]              { width: 300px; }\n.col-md-9 img[alt=EnvironmentSpaces]  { width: 200px; }\n.col-md-9 img[alt=FilterApplied]      { width: 200px; }\n.col-md-9 img[alt=HoveringOverFilter] { width: 200px; }\n.col-md-9 img[alt=DashboardMenuIcon]  { width: 150px; }\n\n\n\n\nMetrics\n\n\nIntroduction\n\n\nBeachfront is a set of open-source cloud services that enables users to leverage detection algorithms and imagery sources to update global coastline vectors. Users can exploit third-party imagery data using detection algorithms to generate coastline vector data. It provides users the ability to automatically extract large sections of coastline to produce timely, dynamic data in support of multiple communities using the best-available source imagery. Although intended for shorelines, Beachfront can be modified to serve other feature communities of interest to assist in automated feature and object detection if other algorithms are available.\n\n\nThe purpose of this guide is to serve as a walkthrough for getting access to metrics dashboards, which can provide useful details relating to, though not limited to, the following details:\n\n\n\n\n\n\n\n\nRequirement\n\n\nDescription of Purpose\n\n\n\n\n\n\n\n\n\n\nBeachfront application users\n\n\nProviding an understanding of who is engaging with Beachfront.\n\n\n\n\n\n\nOrganizations represented from recent users\n\n\nThis provides an understanding of, not only who, though which unique groups or missions Beachfront is helping.\n\n\n\n\n\n\nSuccessful and unsuccessful login attempts\n\n\nThis provides an important note if the system is experiencing repeated login rejections and why.\n\n\n\n\n\n\nApplication uptime \n downtime\n\n\nProviding an overview of the system dependability and reliability as an operational environment.\n\n\n\n\n\n\nProcessing times\n\n\nProvides an understanding of how long the system is taking to process each job, so the appropriate expectations can be formed for users interacting with Beachfront.\n\n\n\n\n\n\nAreas of Interest (AOI) Visited\n\n\nThis provides application owners the ability to understand what areas of interest (AOI) analysts are using Beachfront to look at.\n\n\n\n\n\n\nRequested Image Types\n\n\nThis provides an understanding of which types of information are relevant to what users are requesting\n\n\n\n\n\n\nProcessing Request Details\n\n\nThis provides an understanding, particularly from a system perspective, for how well Beachfront is performing, as well as how many job requests are succeeding compared to how many are failing.\n\n\n\n\n\n\nNumber of Image Requests\n\n\nThis provides an understanding of whether or not the users are finding relevant responses through Beachfront\n\n\n\n\n\n\nCloud Cover Requests\n\n\nThis provides developmental metrics for what cloud cover levels are preferred.\n\n\n\n\n\n\nNew Beachfront users compared to existing Beachfront users\n\n\nThis provides context to Beachfront for how many new and pre-existing users are engaging with the system, in order to gauge an understanding for how well mission outreach is performing, along with understanding if users are finding what they are looking for in order to being retained and want to return.\n\n\n\n\n\n\nScene Size\n\n\nKnowing the file size of the image is a baseline statistic to help Beachfront determine what resource requirements are needed to process a scene.\n\n\n\n\n\n\nGeographic Scene Size\n\n\nThis metric is to be collected for resource planning and other business analytics. This metric might be used help determine performance and how much information we are processing in a certain period of time.\n\n\n\n\n\n\nActivation Time\n\n\nThis metric helps understand how long Beachfront is taking to activate jobs for a particular data provider\n\n\n\n\n\n\nOutput Size\n\n\nThis metric will help us understand how much data is being stored for each coastline produced.\n\n\n\n\n\n\nMaximum Memory Usage (PCF)\n\n\nThis helps us understand what memory utilization is required in order to better allocate more appropriate resources to services.\n\n\n\n\n\n\nMaximum Disk Space (PCF)\n\n\nThis helps us understand what disk space utilization is required in order to better allocate more appropriate resources to services.\n\n\n\n\n\n\n\n\nAssumptions \n Requirements\n\n\nPrior to navigating this guide, the following assumptions and requirements are made:\n\n\n\n\nEach user has access to a computer or tablet/mobile device with web browsing functionality available.\n\n\nEach user has an active account and valid credentials for accessing and logging into the Kibana application.\n\n\nEach user has an account with the appropriate privileges for accessing the necessary datasets, within the necessary environments.\n\n\nKibana is available within the environment interested in, and has already been configured with Beachfront metrics capabilities\n\n\n\n\nRelevant URL\u2019s\n\n\nThe table below lists URL to each of the primary Beachfront environments.\n\n\n\n\n\n\n\n\nEnvironment\n\n\nComponent\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nL2 (.io)\n\n\nKibana\n\n\nhttps://logsearch.system.dev.east.paas.geointservices.io/app/kibana\n\n\n\n\n\n\nL2 (.io)\n\n\nPivotal Cloud Foundry\n\n\nhttps://apps.system.dev.east.paas.geointservices.io\n\n\n\n\n\n\nL4 (.mil)\n\n\nKibana\n\n\nhttps://logsearch.ops.east.paas.nga.mil/app/kibana\n\n\n\n\n\n\n\n\nKibana Application Overview\n\n\nBeachfront currently uses the Kibana/Logsearch application for displaying metrics, which is made available through GeoIntServices. While this guide will make the effort to provide a thorough understanding of the Beachfront metrics capabilities that are made available, it is important to note that this guide is not intended to provide an exhaustive understanding or overview of how to use the entirety of the Kibana/Logsearch application. As more metrics-specific capabilities are rolled out, this document will be updated to reflect these changes/updates.\n\n\nFor an official overview or tutorial on using Kibana/Logsearch, users can navigate to the official Kibana \nwebsite\n and \ngetting-started-guide\n.\n\n\nAccessing Kibana\n\n\nTo access kibana, users can follow the steps below:\n\n\n\n\nOpen a web browser on a computer or tablet/mobile device.\n\n\nNavigate to the kibana URL of the environment interested in viewing.\n\n\n\n\nA login screen will appear\n\n\n\n\n\n\n\nEnter email/username and password for your user account, and select the \u2018SIGN IN\u2019 button. Once logged in with valid environment-specific credentials, you will be navigated to the kibana main page.\n\n\n\n\n\n\nKibana Overview\n\n\nKibana has several components. At the core, users will mainly interact with kibana through 2-3 components: search (discover), visualizations, and dashboard.\n\n\nDiscover\n\n\nThe discover section allows for searching through the data. This provides the data in a more table-like format, for looking at specific records, as well as filtering to look at specific fields. For more details on the discover section, users can reference the Elastic \nwebsite\n discovery details page.\n\n\nVisualizations\n\n\nThe visualizations section allows data fields to be transformed into a more visual representation, rather than a table-like display. For more details on the discover section, users can reference the Elastic \nwebsite visualizations details page\n.\n\n\nDashboards\n\n\nThe dashboards section allows saved visualizations and/or saved searches to be grouped and organized into common layouts. For more details on the discover section, users can reference the Elastic \nwebsite dashboards details page\n.\n\n\nAccessing Beachfront Metrics\n\n\nBeachfront metrics dashboards can be accessed by following the steps below:\n\n\n\n\nSelect the \u201cDashboard\u201d section from within the kibana navigation panel on the left-hand side of the screen.\n\n\n\n\n\nThis will open the main dashboards screen, with a table showing all saved dashboards.\n\n\nBeachfront currently has the following metrics dashboards available:\n\n\n\n\nBeachfront User Metrics\n \n Metrics related to users accessing Beachfront\n\n\nBeachfront Jobs Metrics\n \n Metrics related to jobs run on Beachfront, as well as any statistics related\n\n\n\n\n\n\n\n\nNOTE:\n\n\nAll environments provide the ability to look at all respective environments, as well as filtering to look at one specific environment. To learn about how to apply environment filtering, please reference the Environment Filtering in Dashboards section.\n\n\nBeachfront User Metrics\n\n\nThe User metrics dashboard serves the purpose of displaying user-related metrics, such as who has used Beachfront (and how often or how recently), or which organizations, units, and countries are represented by those users. The image below displays an example of what the User metrics dashboard consists of.\n\n\n\nThe user metrics dashboard is organized with the following components:\n\n\n\n\n\n\n\n\nDashboard Component\n\n\nDescription / Purpose\n\n\n\n\n\n\n\n\n\n\nUniqueSpaces\n\n\nThe different spaces within the environment, with a pie chart breakdown of the percentage of events from each, over the selected time period. To look at just the events for a specific space (i.e. int, test, prod, etc), click on that part of the pie chart.\n\n\n\n\n\n\nUserMostRecentLogins\n\n\nThis provides a list of the users (certificate distinguished names) who have logged into Beachfront, along with a count of the number of times they logged in, and the most recent date/time they logged in, over the selected time period.\n\n\n\n\n\n\nTotalUniqueUserLogins\n\n\nProvides a numerical count representation for the number of unique users that have used Beachfront over the selected time period.\n\n\n\n\n\n\nAuthLoginStatus\n\n\nProvides a breakdown of the successful and failed login attempts within Beachfront over the selected time period.\n\n\n\n\n\n\nUniqueCountryCounts\n\n\nThis provides a breakdown of the unique countries represented by the users that have used Beachfront over the selected time period.\n\n\n\n\n\n\nOrgUnitCounts\n\n\nThis provides a breakdown of the unique organizational units represented by the users that have used Beachfront over the selected time period. This provides a breakdown for any entities within the respective organization that the user is a part of (i.e. NGA, DoD, etc).\n\n\n\n\n\n\nOrganizationCounts\n\n\nThis provides a breakdown of the unique organizations represented by the users that have used Beachfront over the selected time period.\n\n\n\n\n\n\nNewExistingUserLoginsCount\n\n\nProvides a side-by-side comparison of the number of existing users, compared to the number of first-time users within Beachfront over the selected time period.\n\n\n\n\n\n\n\n\nBeachfront Jobs Metrics\n\n\nThe Jobs metrics dashboard serves the purpose of displaying job and system related information about Beachfront over the selected time period. The image below displays an example of what the Jobs metrics dashboard consists of.\n\n\n\nThe jobs metrics dashboard displays the following components:\n\n\n\n\n\n\n\n\nDashboard Component\n\n\nDescription / Purpose\n\n\n\n\n\n\n\n\n\n\nUniqueSpaces\n\n\nThe different spaces within the environment, with a pie chart breakdown of the percentage of events from each, over the selected time period. To look at just the events for a specific space (i.e. int, test, prod, etc), click on that part of the pie chart.\n\n\n\n\n\n\nJobRequestsCount\n\n\nThis specifies the total number of jobs which have been requested over the specified time period. It is important to note that this number is explicitly for the number of jobs requested, not finished.\n\n\n\n\n\n\nJobsCount\n\n\nThis provides a side-by-side breakdown for the number of jobs which have completed successfully compared to those which have resulted in an error.\n\n\n\n\n\n\nItemTypesRequested\n\n\nThis provides a table representation for the various imagery item types which were requested by users when a job was requested.\n\n\n\n\n\n\nAreasOfInterestRequested\n\n\nThis provides a table representation for the various areas of interest (AOI) which were requested by users when a job was requested.\n\n\n\n\n\n\nAverageJobCompletionTime\n\n\nThis specifies the average amount time (in minutes) it took jobs to complete processing.\n\n\n\n\n\n\nAverageJobActivationTime\n\n\nThis specifies the average amount time (in seconds) it took jobs to complete activation.\n\n\n\n\n\n\nCompletedJobsStatus\n\n\nThis provides the status for each job and how it completed after being run. It also lists the amount of time it took for the job to run.\n\n\n\n\n\n\nUptimeDowntime\n\n\nThis provides a graph outlining when the system was up or down, over the specified time period. When certain times show a count of 0, that represents a time-period when the system was not available.\n\n\n\n\n\n\nAverageSceneSizeGeographicArea\n\n\nThis is used to help determine performance and how much information we are processing in a certain period of time\n\n\n\n\n\n\nAverageGeoJSONSize\n\n\nThis metric will help us understand how much data is being stored for each coastline produced\n\n\n\n\n\n\nAverageCloudCoverRequested\n\n\nThis provides a table representation for the average cloud cover that was requested by users when a job was requested.\n\n\n\n\n\n\nImageRequestsTotal\n\n\nThis specifies the total number of images that were requested for download over the selected time period.\n\n\n\n\n\n\nAverageSceneFileSize\n\n\nThe baseline statistic to help Beachfront determine what resource requirements are needed to process a scene.\n\n\n\n\n\n\n\n\nPCF-related Metrics\n\n\nSome of the requested metrics requested for Beachfront involve metrics that are available directly through Pivotal Cloud Foundry (PCF), which is the underlying architecture that Beachfront components run on. PCF provides these metrics which relays system resources and utilization for each instance of the Beachfront components running. For any current or future PCF-related metrics requirements, users can follow the steps below in order to find the system-related resources metrics.\n\n\n\n\nLog into the PCF web portal. Refer to the \nRelevant URL\ns\n section for assistance, if necessary.\n\n\nThe main screen should display the various environments that you have been granted access to. Hover over and click on the environment of interest (e.g. pz-int, pz-test, pz-prod).\n\n\nYou should be navigated to the page for the specific environment selected, which lists all the apps running for that environment.\n\n\nSelect the row with the application of interest, and then click on the \u201cName\u201d column cell. This will navigate you to the page displaying the events and other information related to the application of interest.\n\n\nLocate the \u201cInstances\u201d section on the right side of the page, as shown in the image below.\n\n\n\nClick on the \u201cView in PCF Metrics\u201d link. A new browser window will open for PCF metrics.\n\n\nLogin to PCF Metrics using the same credentials used for logging into PCF in step 1.\n\n\nThe PCF Metrics page will display for the instance selected in step 4.\n\n\n\nThe dashboard displays several system-related metrics, such as latency, number of requests, cpu, disk, memory, and system events metrics, along with being able to look at logs for this instance.\n\n\n\n\n\nEnvironment Filtering in Dashboards\n\n\nAll environments provide the ability to look at all respective environments, as well as filtering to look at one specific environment. To add and remove filtering within the kibana dashboard, please follow the steps outlined below.\n\n\nAdding Environment Filter\n\n\nTo add an environment filter:\n\n\n\n\nLocate the \u201cBeachfront_UniqueSpaces\u201d component within the dashboard. It can be found in the upper-left corner of the dashboard, under the search bar and to the right of the menu bar.\n\n\n\nIf you hover the mouse/pointer over any of the sections within the pie chart, a pop-up will display which environment space it is, as well as particular counts for that environment.\n\n\nOnce the environment space of interest is determined, press the mouse on that space to select it. A gray oval-shaped bubble should appear directly under the search bar, as shown below.\n\n\n\nThe values in the dashboard should update shortly to reflect the filtered values.\n\n\n\n\nRemoving Environment Filter\n\n\nIf an environment filter has been applied using the above instructions, to remove the filter:\n\n\n\n\nLocate the gray oval-shaped bubble under the search bar.\n\n\n\nOnce found, hover over the gray bubble. Some icons should appear.\n\n\n\nLocate the trash can icon and select it. The gray bubble should disappear and the values in the dashboard should update shortly to reflect the unfiltered values.", 
            "title": "Metrics"
        }, 
        {
            "location": "/userguide/metrics/#metrics", 
            "text": "", 
            "title": "Metrics"
        }, 
        {
            "location": "/userguide/metrics/#introduction", 
            "text": "Beachfront is a set of open-source cloud services that enables users to leverage detection algorithms and imagery sources to update global coastline vectors. Users can exploit third-party imagery data using detection algorithms to generate coastline vector data. It provides users the ability to automatically extract large sections of coastline to produce timely, dynamic data in support of multiple communities using the best-available source imagery. Although intended for shorelines, Beachfront can be modified to serve other feature communities of interest to assist in automated feature and object detection if other algorithms are available.  The purpose of this guide is to serve as a walkthrough for getting access to metrics dashboards, which can provide useful details relating to, though not limited to, the following details:     Requirement  Description of Purpose      Beachfront application users  Providing an understanding of who is engaging with Beachfront.    Organizations represented from recent users  This provides an understanding of, not only who, though which unique groups or missions Beachfront is helping.    Successful and unsuccessful login attempts  This provides an important note if the system is experiencing repeated login rejections and why.    Application uptime   downtime  Providing an overview of the system dependability and reliability as an operational environment.    Processing times  Provides an understanding of how long the system is taking to process each job, so the appropriate expectations can be formed for users interacting with Beachfront.    Areas of Interest (AOI) Visited  This provides application owners the ability to understand what areas of interest (AOI) analysts are using Beachfront to look at.    Requested Image Types  This provides an understanding of which types of information are relevant to what users are requesting    Processing Request Details  This provides an understanding, particularly from a system perspective, for how well Beachfront is performing, as well as how many job requests are succeeding compared to how many are failing.    Number of Image Requests  This provides an understanding of whether or not the users are finding relevant responses through Beachfront    Cloud Cover Requests  This provides developmental metrics for what cloud cover levels are preferred.    New Beachfront users compared to existing Beachfront users  This provides context to Beachfront for how many new and pre-existing users are engaging with the system, in order to gauge an understanding for how well mission outreach is performing, along with understanding if users are finding what they are looking for in order to being retained and want to return.    Scene Size  Knowing the file size of the image is a baseline statistic to help Beachfront determine what resource requirements are needed to process a scene.    Geographic Scene Size  This metric is to be collected for resource planning and other business analytics. This metric might be used help determine performance and how much information we are processing in a certain period of time.    Activation Time  This metric helps understand how long Beachfront is taking to activate jobs for a particular data provider    Output Size  This metric will help us understand how much data is being stored for each coastline produced.    Maximum Memory Usage (PCF)  This helps us understand what memory utilization is required in order to better allocate more appropriate resources to services.    Maximum Disk Space (PCF)  This helps us understand what disk space utilization is required in order to better allocate more appropriate resources to services.", 
            "title": "Introduction"
        }, 
        {
            "location": "/userguide/metrics/#assumptions_requirements", 
            "text": "Prior to navigating this guide, the following assumptions and requirements are made:   Each user has access to a computer or tablet/mobile device with web browsing functionality available.  Each user has an active account and valid credentials for accessing and logging into the Kibana application.  Each user has an account with the appropriate privileges for accessing the necessary datasets, within the necessary environments.  Kibana is available within the environment interested in, and has already been configured with Beachfront metrics capabilities", 
            "title": "Assumptions &amp; Requirements"
        }, 
        {
            "location": "/userguide/metrics/#relevant_urls", 
            "text": "The table below lists URL to each of the primary Beachfront environments.     Environment  Component  URL      L2 (.io)  Kibana  https://logsearch.system.dev.east.paas.geointservices.io/app/kibana    L2 (.io)  Pivotal Cloud Foundry  https://apps.system.dev.east.paas.geointservices.io    L4 (.mil)  Kibana  https://logsearch.ops.east.paas.nga.mil/app/kibana", 
            "title": "Relevant URL\u2019s"
        }, 
        {
            "location": "/userguide/metrics/#kibana_application_overview", 
            "text": "Beachfront currently uses the Kibana/Logsearch application for displaying metrics, which is made available through GeoIntServices. While this guide will make the effort to provide a thorough understanding of the Beachfront metrics capabilities that are made available, it is important to note that this guide is not intended to provide an exhaustive understanding or overview of how to use the entirety of the Kibana/Logsearch application. As more metrics-specific capabilities are rolled out, this document will be updated to reflect these changes/updates.  For an official overview or tutorial on using Kibana/Logsearch, users can navigate to the official Kibana  website  and  getting-started-guide .", 
            "title": "Kibana Application Overview"
        }, 
        {
            "location": "/userguide/metrics/#accessing_kibana", 
            "text": "To access kibana, users can follow the steps below:   Open a web browser on a computer or tablet/mobile device.  Navigate to the kibana URL of the environment interested in viewing.   A login screen will appear    Enter email/username and password for your user account, and select the \u2018SIGN IN\u2019 button. Once logged in with valid environment-specific credentials, you will be navigated to the kibana main page.", 
            "title": "Accessing Kibana"
        }, 
        {
            "location": "/userguide/metrics/#kibana_overview", 
            "text": "Kibana has several components. At the core, users will mainly interact with kibana through 2-3 components: search (discover), visualizations, and dashboard.", 
            "title": "Kibana Overview"
        }, 
        {
            "location": "/userguide/metrics/#discover", 
            "text": "The discover section allows for searching through the data. This provides the data in a more table-like format, for looking at specific records, as well as filtering to look at specific fields. For more details on the discover section, users can reference the Elastic  website  discovery details page.", 
            "title": "Discover"
        }, 
        {
            "location": "/userguide/metrics/#visualizations", 
            "text": "The visualizations section allows data fields to be transformed into a more visual representation, rather than a table-like display. For more details on the discover section, users can reference the Elastic  website visualizations details page .", 
            "title": "Visualizations"
        }, 
        {
            "location": "/userguide/metrics/#dashboards", 
            "text": "The dashboards section allows saved visualizations and/or saved searches to be grouped and organized into common layouts. For more details on the discover section, users can reference the Elastic  website dashboards details page .", 
            "title": "Dashboards"
        }, 
        {
            "location": "/userguide/metrics/#accessing_beachfront_metrics", 
            "text": "Beachfront metrics dashboards can be accessed by following the steps below:   Select the \u201cDashboard\u201d section from within the kibana navigation panel on the left-hand side of the screen.   This will open the main dashboards screen, with a table showing all saved dashboards.  Beachfront currently has the following metrics dashboards available:   Beachfront User Metrics    Metrics related to users accessing Beachfront  Beachfront Jobs Metrics    Metrics related to jobs run on Beachfront, as well as any statistics related     NOTE:  All environments provide the ability to look at all respective environments, as well as filtering to look at one specific environment. To learn about how to apply environment filtering, please reference the Environment Filtering in Dashboards section.", 
            "title": "Accessing Beachfront Metrics"
        }, 
        {
            "location": "/userguide/metrics/#beachfront_user_metrics", 
            "text": "The User metrics dashboard serves the purpose of displaying user-related metrics, such as who has used Beachfront (and how often or how recently), or which organizations, units, and countries are represented by those users. The image below displays an example of what the User metrics dashboard consists of.  The user metrics dashboard is organized with the following components:     Dashboard Component  Description / Purpose      UniqueSpaces  The different spaces within the environment, with a pie chart breakdown of the percentage of events from each, over the selected time period. To look at just the events for a specific space (i.e. int, test, prod, etc), click on that part of the pie chart.    UserMostRecentLogins  This provides a list of the users (certificate distinguished names) who have logged into Beachfront, along with a count of the number of times they logged in, and the most recent date/time they logged in, over the selected time period.    TotalUniqueUserLogins  Provides a numerical count representation for the number of unique users that have used Beachfront over the selected time period.    AuthLoginStatus  Provides a breakdown of the successful and failed login attempts within Beachfront over the selected time period.    UniqueCountryCounts  This provides a breakdown of the unique countries represented by the users that have used Beachfront over the selected time period.    OrgUnitCounts  This provides a breakdown of the unique organizational units represented by the users that have used Beachfront over the selected time period. This provides a breakdown for any entities within the respective organization that the user is a part of (i.e. NGA, DoD, etc).    OrganizationCounts  This provides a breakdown of the unique organizations represented by the users that have used Beachfront over the selected time period.    NewExistingUserLoginsCount  Provides a side-by-side comparison of the number of existing users, compared to the number of first-time users within Beachfront over the selected time period.", 
            "title": "Beachfront User Metrics"
        }, 
        {
            "location": "/userguide/metrics/#beachfront_jobs_metrics", 
            "text": "The Jobs metrics dashboard serves the purpose of displaying job and system related information about Beachfront over the selected time period. The image below displays an example of what the Jobs metrics dashboard consists of.  The jobs metrics dashboard displays the following components:     Dashboard Component  Description / Purpose      UniqueSpaces  The different spaces within the environment, with a pie chart breakdown of the percentage of events from each, over the selected time period. To look at just the events for a specific space (i.e. int, test, prod, etc), click on that part of the pie chart.    JobRequestsCount  This specifies the total number of jobs which have been requested over the specified time period. It is important to note that this number is explicitly for the number of jobs requested, not finished.    JobsCount  This provides a side-by-side breakdown for the number of jobs which have completed successfully compared to those which have resulted in an error.    ItemTypesRequested  This provides a table representation for the various imagery item types which were requested by users when a job was requested.    AreasOfInterestRequested  This provides a table representation for the various areas of interest (AOI) which were requested by users when a job was requested.    AverageJobCompletionTime  This specifies the average amount time (in minutes) it took jobs to complete processing.    AverageJobActivationTime  This specifies the average amount time (in seconds) it took jobs to complete activation.    CompletedJobsStatus  This provides the status for each job and how it completed after being run. It also lists the amount of time it took for the job to run.    UptimeDowntime  This provides a graph outlining when the system was up or down, over the specified time period. When certain times show a count of 0, that represents a time-period when the system was not available.    AverageSceneSizeGeographicArea  This is used to help determine performance and how much information we are processing in a certain period of time    AverageGeoJSONSize  This metric will help us understand how much data is being stored for each coastline produced    AverageCloudCoverRequested  This provides a table representation for the average cloud cover that was requested by users when a job was requested.    ImageRequestsTotal  This specifies the total number of images that were requested for download over the selected time period.    AverageSceneFileSize  The baseline statistic to help Beachfront determine what resource requirements are needed to process a scene.", 
            "title": "Beachfront Jobs Metrics"
        }, 
        {
            "location": "/userguide/metrics/#pcf-related_metrics", 
            "text": "Some of the requested metrics requested for Beachfront involve metrics that are available directly through Pivotal Cloud Foundry (PCF), which is the underlying architecture that Beachfront components run on. PCF provides these metrics which relays system resources and utilization for each instance of the Beachfront components running. For any current or future PCF-related metrics requirements, users can follow the steps below in order to find the system-related resources metrics.   Log into the PCF web portal. Refer to the  Relevant URL s  section for assistance, if necessary.  The main screen should display the various environments that you have been granted access to. Hover over and click on the environment of interest (e.g. pz-int, pz-test, pz-prod).  You should be navigated to the page for the specific environment selected, which lists all the apps running for that environment.  Select the row with the application of interest, and then click on the \u201cName\u201d column cell. This will navigate you to the page displaying the events and other information related to the application of interest.  Locate the \u201cInstances\u201d section on the right side of the page, as shown in the image below.  Click on the \u201cView in PCF Metrics\u201d link. A new browser window will open for PCF metrics.  Login to PCF Metrics using the same credentials used for logging into PCF in step 1.  The PCF Metrics page will display for the instance selected in step 4.  The dashboard displays several system-related metrics, such as latency, number of requests, cpu, disk, memory, and system events metrics, along with being able to look at logs for this instance.", 
            "title": "PCF-related Metrics"
        }, 
        {
            "location": "/userguide/metrics/#environment_filtering_in_dashboards", 
            "text": "All environments provide the ability to look at all respective environments, as well as filtering to look at one specific environment. To add and remove filtering within the kibana dashboard, please follow the steps outlined below.", 
            "title": "Environment Filtering in Dashboards"
        }, 
        {
            "location": "/userguide/metrics/#adding_environment_filter", 
            "text": "To add an environment filter:   Locate the \u201cBeachfront_UniqueSpaces\u201d component within the dashboard. It can be found in the upper-left corner of the dashboard, under the search bar and to the right of the menu bar.  If you hover the mouse/pointer over any of the sections within the pie chart, a pop-up will display which environment space it is, as well as particular counts for that environment.  Once the environment space of interest is determined, press the mouse on that space to select it. A gray oval-shaped bubble should appear directly under the search bar, as shown below.  The values in the dashboard should update shortly to reflect the filtered values.", 
            "title": "Adding Environment Filter"
        }, 
        {
            "location": "/userguide/metrics/#removing_environment_filter", 
            "text": "If an environment filter has been applied using the above instructions, to remove the filter:   Locate the gray oval-shaped bubble under the search bar.  Once found, hover over the gray bubble. Some icons should appear.  Locate the trash can icon and select it. The gray bubble should disappear and the values in the dashboard should update shortly to reflect the unfiltered values.", 
            "title": "Removing Environment Filter"
        }, 
        {
            "location": "/userguide/data/", 
            "text": "Data\n\n\nDescription\n\n\nMost simply, Beachfront is a system that orchestrates a user-driven workflow where algorithms produce automated vector shoreline detections from available, processed, satellite imagery.\n\n\nIn greater detail, Beachfront enables users to search for and choose their data input (currently a satellite image), select the detection algorithm they want to run, and then invoke Beachfront to process that imagery with an algorithm to produce vector data as an output.\n\n\nUpon the user executing an algorithm in the UI, the Beachfront API receives this request and reads in pertinent metadata that belongs to the input image. It then takes that information and appends it to each vector output so the vectors maintain the pedigree of the source satellite image. In addition, Beachfront takes metadata from the tide service (a predicted tide height, 24 hour low height, and 24 hour high height). This is along with ancillary information such as: the classification of the data, the \nnot to be used for navigation or targeting\n disclaimer, the version of the algorithm at runtime, the user information, and time of process. This information is then appended to the correct vector data as well. Every vector is attributed with this information so that later in analysis and/or production these vectors can be used in conjunction with different data sources in an area of interest, and the pedigree of each vector remains.\n\n\nData Dictionary\n\n\n\n\n\n\n\n\nAttribute Name\n\n\nAttribute Definition\n\n\nExample Values\n\n\n\n\n\n\n\n\n\n\njob_id\n\n\nA unique 36-character designation of the individual job that is run in Beachfront and generated by Beachfront back end.\n\n\nd3b9f87d-c2a2-4c40-b200\n\n\n\n\n\n\nalgorithm_id\n\n\nThe unique identifier of the algorithm and its associated version that was run upon execution.\n\n\n872cc1ff-cf24-42b2-a94c\n\n\n\n\n\n\nalgorithm_name\n\n\nThe name of the algorithm service used for processing.\n\n\nBF_Algo_NDWI_PY\n\n\n\n\n\n\nalgorithm_version\n\n\nThe version of the algorithm used at the time of processing.\n\n\n1.1.1\n\n\n\n\n\n\ncloud_cover\n\n\nThe percentage cloud cover of the source image.\n\n\n0\n\n\n\n\n\n\ncreated_by\n\n\nThe identity of the user who ran the Beachfront detection job.\n\n\ncn=testuser, OU=Component, OU=NGA, OU=DoD, O=U.S. Government, C=US\n\n\n\n\n\n\ncreated_on\n\n\nThe time in zulu/GMT that the user ran the Beachfront detection job.\n\n\n2018-08-02T19:03:07.866+00:00\n\n\n\n\n\n\nname\n\n\nThe name of the file that the user designates.\n\n\nS2B_MSIL1C_20180720T100029\n\n\n\n\n\n\nresolution\n\n\nThe pixel size of the third party source image; values are in meters and were derived from third party data product information.\n\n\n10\n\n\n\n\n\n\nscene_id\n\n\nThe name of the image identifier from the third party image provider.\n\n\nsentinel:S2B_MSIL1C_20180720T100029\n\n\n\n\n\n\nsensor_name\n\n\nThe third party image provider platform name\n\n\nSentinel-2B\n\n\n\n\n\n\nsrc_horizontal_accuracy\n\n\nThe source\ns horizontal accuracy; since Beachfront uses image sources from different third parties, the standards vary for measuring this.\n\n\n12.5m with GCPs\n\n\n\n\n\n\nstatus\n\n\nFinal status of the Beachfront job.\n\n\nSuccess\n\n\n\n\n\n\ntide\n\n\nApproximate tidal height in meters according to Beachfront\ns Tide Prediction Service methodology for time and location of image collection.\n\n\n0.350270918707115\n\n\n\n\n\n\ntide_min_24h\n\n\nApproximate 24 hour minimum tidal height in meters according to Tide Prediction Service methodology for 24 hour time period for location of image collection.\n\n\n0.320737772095838\n\n\n\n\n\n\ntide_max_24h\n\n\nApproximate 24 hour maximum tidal height in meters according to Tide Prediction Service methodology for 24 hour time period for location of image collection.\n\n\n0.444723733896406\n\n\n\n\n\n\ntime_of_collect\n\n\nThe source time of collect derived from the third party provider.  All times are in zulu.\n\n\n2018-07-20T10:02:41.557+00:00\n\n\n\n\n\n\ndata_usage\n\n\nStatic statement applied to all regarding disclaimer that data is not to be used for targeting or navigation.\n\n\nNOT FOR TARGETING OR NAVIGATION PURPOSES\n\n\n\n\n\n\nclassification\n\n\nClassification of the data.  This is a static classification of unclassified when using unclassified data sources.\n\n\nUNCLASSIFIED", 
            "title": "Data"
        }, 
        {
            "location": "/userguide/data/#data", 
            "text": "", 
            "title": "Data"
        }, 
        {
            "location": "/userguide/data/#description", 
            "text": "Most simply, Beachfront is a system that orchestrates a user-driven workflow where algorithms produce automated vector shoreline detections from available, processed, satellite imagery.  In greater detail, Beachfront enables users to search for and choose their data input (currently a satellite image), select the detection algorithm they want to run, and then invoke Beachfront to process that imagery with an algorithm to produce vector data as an output.  Upon the user executing an algorithm in the UI, the Beachfront API receives this request and reads in pertinent metadata that belongs to the input image. It then takes that information and appends it to each vector output so the vectors maintain the pedigree of the source satellite image. In addition, Beachfront takes metadata from the tide service (a predicted tide height, 24 hour low height, and 24 hour high height). This is along with ancillary information such as: the classification of the data, the  not to be used for navigation or targeting  disclaimer, the version of the algorithm at runtime, the user information, and time of process. This information is then appended to the correct vector data as well. Every vector is attributed with this information so that later in analysis and/or production these vectors can be used in conjunction with different data sources in an area of interest, and the pedigree of each vector remains.", 
            "title": "Description"
        }, 
        {
            "location": "/userguide/data/#data_dictionary", 
            "text": "Attribute Name  Attribute Definition  Example Values      job_id  A unique 36-character designation of the individual job that is run in Beachfront and generated by Beachfront back end.  d3b9f87d-c2a2-4c40-b200    algorithm_id  The unique identifier of the algorithm and its associated version that was run upon execution.  872cc1ff-cf24-42b2-a94c    algorithm_name  The name of the algorithm service used for processing.  BF_Algo_NDWI_PY    algorithm_version  The version of the algorithm used at the time of processing.  1.1.1    cloud_cover  The percentage cloud cover of the source image.  0    created_by  The identity of the user who ran the Beachfront detection job.  cn=testuser, OU=Component, OU=NGA, OU=DoD, O=U.S. Government, C=US    created_on  The time in zulu/GMT that the user ran the Beachfront detection job.  2018-08-02T19:03:07.866+00:00    name  The name of the file that the user designates.  S2B_MSIL1C_20180720T100029    resolution  The pixel size of the third party source image; values are in meters and were derived from third party data product information.  10    scene_id  The name of the image identifier from the third party image provider.  sentinel:S2B_MSIL1C_20180720T100029    sensor_name  The third party image provider platform name  Sentinel-2B    src_horizontal_accuracy  The source s horizontal accuracy; since Beachfront uses image sources from different third parties, the standards vary for measuring this.  12.5m with GCPs    status  Final status of the Beachfront job.  Success    tide  Approximate tidal height in meters according to Beachfront s Tide Prediction Service methodology for time and location of image collection.  0.350270918707115    tide_min_24h  Approximate 24 hour minimum tidal height in meters according to Tide Prediction Service methodology for 24 hour time period for location of image collection.  0.320737772095838    tide_max_24h  Approximate 24 hour maximum tidal height in meters according to Tide Prediction Service methodology for 24 hour time period for location of image collection.  0.444723733896406    time_of_collect  The source time of collect derived from the third party provider.  All times are in zulu.  2018-07-20T10:02:41.557+00:00    data_usage  Static statement applied to all regarding disclaimer that data is not to be used for targeting or navigation.  NOT FOR TARGETING OR NAVIGATION PURPOSES    classification  Classification of the data.  This is a static classification of unclassified when using unclassified data sources.  UNCLASSIFIED", 
            "title": "Data Dictionary"
        }, 
        {
            "location": "/release_notes/Version2/", 
            "text": "GEOINT Services | Release Notes\n\n\n\n\n\n\nVersion 2.1\n\n\nDate and version number of current changes: TBD, v2.1\n\n\nBeachfront 2.1 builds on Beachfront 2.0 and consists fixes to enhance the \nuser experience and to get Sentinel 2 data to correctly produce and display \ncoastline data.\n\n\nThe following additions and enhancements were made within the 2.1 release:\n\n\nKey Fixes:\n\n\nBeachfront User Interface Fixes\n\n\n\n\nAdded an Activation state to the Beachfront coastline detection process to mirror the Planet.com imagery retrieval process. Beachfront will now tell users exactly when their input dataset is awaiting Planet.com activation.\n\n\nAll GeoServer Web Map Service (WMS) shoreline detection layers now are properly proxied through the Beachfront services component, instead of directing the user directly to GeoServer. This will help prevent many common Cross-Origin Resource Sharing (CORS) errors.\n\n\nImproved user functionality by adding an auto-scrolling feature to the Job Creation workflow. This helps users navigate selections throughout the coastline production process\n\n\nEnhanced error messages to guide the user to provide more search details when required\n\n\nFixed minor styling issue to keep the style consistent across the entire application\n\n\nFixed bug that caused style abnormalities when user tries to access an invalid url\n\n\nFixed styling issues in the User Tour when user has low screen resolution\n\n\n\n\nSingle Scene Coastline Detection Job Execution with Sentinel 2 data provided by Planet.com\n\n\n\n\nUsers may now select Sentinel-2 in the search results dataset drop-down and run the detection process on Sentinel-2 imagery pulled from the Amazon Web Services hosted Sentinel-2 catalog.\n\n\n\n\nAlgorithm efficiency improvements\n\n\n\n\nImproved various memory inefficiencies with the NDWI algorithm that previously caused algorithms to fail or take longer than needed to process.\n\n\nUpdated algorithm software dependencies to latest approved versions to improve performance and resolve issues with old dependencies\n\n\nPotrace 1.15\n\n\nGippy 1.0\n\n\nGDAL 2.1.3\n\n\n\n\n\n\n\n\nBeachfront code update to accommodate image activation time in Planet.com\n\n\n\n\nAllow a greater length of time for Planet.com image activation to take place. Previously, there was a very short timespan allocated to image activation, which sometimes caused failures in activation because the process took longer than expected.\n\n\n\n\nCoastline Dataset Metadata Fixes\n\n\n\n\nAdded all relevant metadata for coastline detections, such as creation date, tides information, algorithm and image types, to the detection results. This fixes a bug where previously certain metadata information was being excluded.\n\n\n\n\nMetrics Functionality\n\n\n\n\nAdded several metrics capabilities to Beachfront within L2 \n L4 logsearch, including dashboards displaying user-related and jobs-related metrics\n\n\n\n\nFeatures or functionality retired in Beachfront 2.1\n\n\n\n\nNo capabilities were retired in Beachfront 2.1\n\n\n\n\nImprovements from previous version\n\n\n\n\nSee above\n\n\n\n\n\n\nVersion 2.0\n\n\nDate and version number of current changes: 01 May 2018, v2.0\n\n\nBeachfront 2.0 builds on Beachfront 1.0 and Piazza and starts to combine the\ntwo applications into one finding efficiencies.  These release notes contain\nthe Beachfront 1.0 and Piazza MVP since those versions of the software were not\never officially delivered and granted ATO through NGA.  Beachfront 2.0 in UC\nwill enable users to securely login using GEOAxIS, search-activated Planet\nprovided imagery, execute coastline detection using an NDWI-based algorithm\nservice, and download tide-coordinated vector outputs after detection job\nexecution. Piazza capabilities have been absorbed into Beachfront and it will be\nATO\u2019d as one project, referred to as Beachfront_Piazza in this document going\nforward.\n\n\nThe following additions and enhancements were made within the 2.0 release:\n\n\nBeachfront User Interface:\n\n\n\n\nUsers will be able to interact with the Beachfront system through a\n    map-driven user interface at \nhttps://beachfront.gs.mil\n\n\nOSM Basemap Tiles will be the basemap until more become available\n\n\n\n\nGeoAxis User Authentication:\n\n\n\n\nUsers will be able to login using their GeoAxis credentials (PKI,\n    Disadvantaged User Account, Austere Account) through an OAuth2-enabled system\n\n\n\n\nSearching Planet Data to run Coastline Detection on through Planet:\n\n\n\n\nUser-controlled search of active AOIs and TOIs of RapidEye, PlanetScope, and\n    Copernicus Sentinel-2 imagery can be made using the following filters:\n\n\nSpatial\n\n\nTemporal\n\n\nCloud Cover\n\n\n\n\n\n\nUsers can choose between searching RapidEye, PlanetScope, or Sentinel-2\n    imagery for candidate scenes/tiles\n\n\n\n\nScene/Tile Preview of Planet Data (provided by Planet):\n\n\n\n\nEnables users to visually inspect image scenes/tiles provided by Planet DAS,\n    e.g., Planet DAS tile server dependency, prior to detection job execution\n\n\nEnables user download to a local machine\n\n\nVector outputs will be in GeoJSON, GeoPackage, or Shapefile format\n    (user\ns choice)\n\n\n\n\n\n\n\n\nSingle Scene Coastline Detection Job Execution (Register and Execute an Algorithm):\n\n\n\n\nUsers can execute coastline detection using a NDWI-based Python algorithm\n    combined with avectorization component in one detection service\n\n\nBeachfront fetches required Planet scene/tile analytic asset and stages for\n    processing\n\n\nBeachfront processes pixels with the algorithm and provides vector output\n    of a shoreline detection.\n\n\n\n\nTide Prediction Service:\n\n\n\n\nBeachfront calls a Global Tide Prediction Service upon scene selection using\n    the centroid of the scene and time of collect in order to predict a tidal\n    height, using a 24-hour low and high value, and decorates every output\n    feature with this metadata\n\n\n\n\nOutput Vector Data:\n\n\n\n\nOutput vector metadata (at feature level) provides the following\n    attribution (and JSON types) relevant to the job it was created by:\n\n\n\n\n\n\n\n\n\n\nField\n\n\nType\n\n\n\n\n\n\n\n\n\n\nid\n\n\ntext\n\n\n\n\n\n\njob_id\n\n\ntext\n\n\n\n\n\n\nalgorithm_id\n\n\ntext\n\n\n\n\n\n\nalgorithm_name\n\n\ntext\n\n\n\n\n\n\nalgorithm_version\n\n\ntext\n\n\n\n\n\n\ncloud_cover\n\n\nnumber\n\n\n\n\n\n\ncreated_by\n\n\ntext\n\n\n\n\n\n\ncreated_on\n\n\ntext (ISO-8601 date/time)\n\n\n\n\n\n\nname\n\n\ntext\n\n\n\n\n\n\nresolution\n\n\nnumber\n\n\n\n\n\n\nscene_id\n\n\ntext\n\n\n\n\n\n\nsensor_name\n\n\ntext\n\n\n\n\n\n\nstatus\n\n\ntext\n\n\n\n\n\n\ntide\n\n\nnumber\n\n\n\n\n\n\ntide_min_24h\n\n\nnumber\n\n\n\n\n\n\ntide_max_24h\n\n\nnumber\n\n\n\n\n\n\ntime_of_collect\n\n\ntext (ISO-8601 date/time)\n\n\n\n\n\n\ndata_usage\n\n\ntext\n\n\n\n\n\n\nclassification\n\n\ntext\n\n\n\n\n\n\n\n\nJobs List:\n\n\n\n\nJobs List provides user ability to return to view historical jobs and their\n    success/failure\n\n\n\n\nPerformance Enhancements:\n\n\n\n\nNon-redundant processing and caching of detections, increasing\n    performance and efficiency\n\n\nAPI micro-service refactored to achieve better maintainability, reliability,\n    and configuration integration with the deployment environment\n\n\nJob executor service refactored for better horizontal scaling, increasing\n    concurrent user capacity by 3x\n\n\nDecreased processing time by 3x through various performance improvements\n\n\n\n\nBug Fixes:\n\n\n\n\nSignificant amount of work went into geting the NDWI to correct output\n    coastline vectors onto the UI.\n\n\n\n\nFeatures or functionality retired in Beachfront 1.0:\n\n\n\n\nPiazza will no longer be refer to as a separate application.  By combining\n    the two applications, the architecture was simplified. This has resulted\n    in better maintainability and faster development.\n\n\n\n\nImprovements from previous version:\n\n\n\n\nN/A\n\n\n\n\nSystem Requirements:\n\n\nData exported from Beachfront 1.x is viewable in Boundless Desktop/QGIS, ArcGIS 10.3 (and later versions) with the Data Interoperability Extension, and GEOINT Viewer as GeoJSON and GeoPackage file formats\n\n\nBrowser requirements for the Beachfront web user interface:\n\n\n\n\nRecommended:\n Chrome 55 and later\n\n\nFirefox 45 and later\n\n\n\n\n\n\n\n\nAdditional Info\n\nFor more information on the release, please use the Beachfront\n\nAsk the Expert\n channel.", 
            "title": "Version 2"
        }, 
        {
            "location": "/release_notes/Version2/#geoint_services_release_notes", 
            "text": "", 
            "title": "GEOINT Services | Release Notes"
        }, 
        {
            "location": "/release_notes/Version2/#version_21", 
            "text": "Date and version number of current changes: TBD, v2.1  Beachfront 2.1 builds on Beachfront 2.0 and consists fixes to enhance the \nuser experience and to get Sentinel 2 data to correctly produce and display \ncoastline data.  The following additions and enhancements were made within the 2.1 release:  Key Fixes:", 
            "title": "Version 2.1"
        }, 
        {
            "location": "/release_notes/Version2/#beachfront_user_interface_fixes", 
            "text": "Added an Activation state to the Beachfront coastline detection process to mirror the Planet.com imagery retrieval process. Beachfront will now tell users exactly when their input dataset is awaiting Planet.com activation.  All GeoServer Web Map Service (WMS) shoreline detection layers now are properly proxied through the Beachfront services component, instead of directing the user directly to GeoServer. This will help prevent many common Cross-Origin Resource Sharing (CORS) errors.  Improved user functionality by adding an auto-scrolling feature to the Job Creation workflow. This helps users navigate selections throughout the coastline production process  Enhanced error messages to guide the user to provide more search details when required  Fixed minor styling issue to keep the style consistent across the entire application  Fixed bug that caused style abnormalities when user tries to access an invalid url  Fixed styling issues in the User Tour when user has low screen resolution", 
            "title": "Beachfront User Interface Fixes"
        }, 
        {
            "location": "/release_notes/Version2/#single_scene_coastline_detection_job_execution_with_sentinel_2_data_provided_by_planetcom", 
            "text": "Users may now select Sentinel-2 in the search results dataset drop-down and run the detection process on Sentinel-2 imagery pulled from the Amazon Web Services hosted Sentinel-2 catalog.", 
            "title": "Single Scene Coastline Detection Job Execution with Sentinel 2 data provided by Planet.com"
        }, 
        {
            "location": "/release_notes/Version2/#algorithm_efficiency_improvements", 
            "text": "Improved various memory inefficiencies with the NDWI algorithm that previously caused algorithms to fail or take longer than needed to process.  Updated algorithm software dependencies to latest approved versions to improve performance and resolve issues with old dependencies  Potrace 1.15  Gippy 1.0  GDAL 2.1.3", 
            "title": "Algorithm efficiency improvements"
        }, 
        {
            "location": "/release_notes/Version2/#beachfront_code_update_to_accommodate_image_activation_time_in_planetcom", 
            "text": "Allow a greater length of time for Planet.com image activation to take place. Previously, there was a very short timespan allocated to image activation, which sometimes caused failures in activation because the process took longer than expected.", 
            "title": "Beachfront code update to accommodate image activation time in Planet.com"
        }, 
        {
            "location": "/release_notes/Version2/#coastline_dataset_metadata_fixes", 
            "text": "Added all relevant metadata for coastline detections, such as creation date, tides information, algorithm and image types, to the detection results. This fixes a bug where previously certain metadata information was being excluded.", 
            "title": "Coastline Dataset Metadata Fixes"
        }, 
        {
            "location": "/release_notes/Version2/#metrics_functionality", 
            "text": "Added several metrics capabilities to Beachfront within L2   L4 logsearch, including dashboards displaying user-related and jobs-related metrics", 
            "title": "Metrics Functionality"
        }, 
        {
            "location": "/release_notes/Version2/#features_or_functionality_retired_in_beachfront_21", 
            "text": "No capabilities were retired in Beachfront 2.1", 
            "title": "Features or functionality retired in Beachfront 2.1"
        }, 
        {
            "location": "/release_notes/Version2/#improvements_from_previous_version", 
            "text": "See above", 
            "title": "Improvements from previous version"
        }, 
        {
            "location": "/release_notes/Version2/#version_20", 
            "text": "Date and version number of current changes: 01 May 2018, v2.0  Beachfront 2.0 builds on Beachfront 1.0 and Piazza and starts to combine the\ntwo applications into one finding efficiencies.  These release notes contain\nthe Beachfront 1.0 and Piazza MVP since those versions of the software were not\never officially delivered and granted ATO through NGA.  Beachfront 2.0 in UC\nwill enable users to securely login using GEOAxIS, search-activated Planet\nprovided imagery, execute coastline detection using an NDWI-based algorithm\nservice, and download tide-coordinated vector outputs after detection job\nexecution. Piazza capabilities have been absorbed into Beachfront and it will be\nATO\u2019d as one project, referred to as Beachfront_Piazza in this document going\nforward.  The following additions and enhancements were made within the 2.0 release:", 
            "title": "Version 2.0"
        }, 
        {
            "location": "/release_notes/Version2/#beachfront_user_interface", 
            "text": "Users will be able to interact with the Beachfront system through a\n    map-driven user interface at  https://beachfront.gs.mil  OSM Basemap Tiles will be the basemap until more become available", 
            "title": "Beachfront User Interface:"
        }, 
        {
            "location": "/release_notes/Version2/#geoaxis_user_authentication", 
            "text": "Users will be able to login using their GeoAxis credentials (PKI,\n    Disadvantaged User Account, Austere Account) through an OAuth2-enabled system", 
            "title": "GeoAxis User Authentication:"
        }, 
        {
            "location": "/release_notes/Version2/#searching_planet_data_to_run_coastline_detection_on_through_planet", 
            "text": "User-controlled search of active AOIs and TOIs of RapidEye, PlanetScope, and\n    Copernicus Sentinel-2 imagery can be made using the following filters:  Spatial  Temporal  Cloud Cover    Users can choose between searching RapidEye, PlanetScope, or Sentinel-2\n    imagery for candidate scenes/tiles", 
            "title": "Searching Planet Data to run Coastline Detection on through Planet:"
        }, 
        {
            "location": "/release_notes/Version2/#scenetile_preview_of_planet_data_provided_by_planet", 
            "text": "Enables users to visually inspect image scenes/tiles provided by Planet DAS,\n    e.g., Planet DAS tile server dependency, prior to detection job execution  Enables user download to a local machine  Vector outputs will be in GeoJSON, GeoPackage, or Shapefile format\n    (user s choice)", 
            "title": "Scene/Tile Preview of Planet Data (provided by Planet):"
        }, 
        {
            "location": "/release_notes/Version2/#single_scene_coastline_detection_job_execution_register_and_execute_an_algorithm", 
            "text": "Users can execute coastline detection using a NDWI-based Python algorithm\n    combined with avectorization component in one detection service  Beachfront fetches required Planet scene/tile analytic asset and stages for\n    processing  Beachfront processes pixels with the algorithm and provides vector output\n    of a shoreline detection.", 
            "title": "Single Scene Coastline Detection Job Execution (Register and Execute an Algorithm):"
        }, 
        {
            "location": "/release_notes/Version2/#tide_prediction_service", 
            "text": "Beachfront calls a Global Tide Prediction Service upon scene selection using\n    the centroid of the scene and time of collect in order to predict a tidal\n    height, using a 24-hour low and high value, and decorates every output\n    feature with this metadata", 
            "title": "Tide Prediction Service:"
        }, 
        {
            "location": "/release_notes/Version2/#output_vector_data", 
            "text": "Output vector metadata (at feature level) provides the following\n    attribution (and JSON types) relevant to the job it was created by:      Field  Type      id  text    job_id  text    algorithm_id  text    algorithm_name  text    algorithm_version  text    cloud_cover  number    created_by  text    created_on  text (ISO-8601 date/time)    name  text    resolution  number    scene_id  text    sensor_name  text    status  text    tide  number    tide_min_24h  number    tide_max_24h  number    time_of_collect  text (ISO-8601 date/time)    data_usage  text    classification  text", 
            "title": "Output Vector Data:"
        }, 
        {
            "location": "/release_notes/Version2/#jobs_list", 
            "text": "Jobs List provides user ability to return to view historical jobs and their\n    success/failure", 
            "title": "Jobs List:"
        }, 
        {
            "location": "/release_notes/Version2/#performance_enhancements", 
            "text": "Non-redundant processing and caching of detections, increasing\n    performance and efficiency  API micro-service refactored to achieve better maintainability, reliability,\n    and configuration integration with the deployment environment  Job executor service refactored for better horizontal scaling, increasing\n    concurrent user capacity by 3x  Decreased processing time by 3x through various performance improvements", 
            "title": "Performance Enhancements:"
        }, 
        {
            "location": "/release_notes/Version2/#bug_fixes", 
            "text": "Significant amount of work went into geting the NDWI to correct output\n    coastline vectors onto the UI.", 
            "title": "Bug Fixes:"
        }, 
        {
            "location": "/release_notes/Version2/#features_or_functionality_retired_in_beachfront_10", 
            "text": "Piazza will no longer be refer to as a separate application.  By combining\n    the two applications, the architecture was simplified. This has resulted\n    in better maintainability and faster development.", 
            "title": "Features or functionality retired in Beachfront 1.0:"
        }, 
        {
            "location": "/release_notes/Version2/#improvements_from_previous_version_1", 
            "text": "N/A", 
            "title": "Improvements from previous version:"
        }, 
        {
            "location": "/release_notes/Version2/#system_requirements", 
            "text": "Data exported from Beachfront 1.x is viewable in Boundless Desktop/QGIS, ArcGIS 10.3 (and later versions) with the Data Interoperability Extension, and GEOINT Viewer as GeoJSON and GeoPackage file formats  Browser requirements for the Beachfront web user interface:   Recommended:  Chrome 55 and later  Firefox 45 and later     Additional Info \nFor more information on the release, please use the Beachfront Ask the Expert  channel.", 
            "title": "System Requirements:"
        }
    ]
}