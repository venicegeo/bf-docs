{
    "docs": [
        {
            "location": "/",
            "text": "Automated Coastline Extraction\n\u00b6\n\n\nWhat is Beachfront?\n\u00b6\n\n\nBeachfront is a set of open-source cloud services that enables users to\nleverage detection algorithms and operational imagery sources to update global\ncoastline vectors. Users can exploit third-party imagery data using detection\nalgorithms to generate coastline vector data. It provides users the ability to\nautomatically extract large sections of coastline to produce timely, dynamic\ndata in support of multiple communities using the best-available source imagery.\nAlthough intended for shorelines, Beachfront can be modified to serve other\nfeature communities of interest to assist in automated feature and object\ndetection if other algorithms are available.\n\n\n\n\nDisclaimer:\n NGA leveraged the VeniceGeo open-source project to develop\nBeachfront and enabled it for use by the geospatial enterprise.\n\n\n\n\nBenefits of Beachfront\n\u00b6\n\n\nPrevious shoreline extraction efforts used massive, infrequent efforts to digitize\nglobal shorelines. Beachfront drastically reduces the amount of time spent on manual\ndigitization of features, and allows for the constant update of feature data products on\ndemand.\n\n\n\n\nUsers can download only the imagery they need and obtain much more current\n    information for the specific sections of coast in which they are interested.\n\n\nThis app simplifies the process for the user by preventing the need to both\n    obtain large shapefiles and search through large outdated files. Users can\n    update coastline vector data as often as new source data is available.\n\n\nIts auto-extraction feature exports immediately to ArcMap or QGIS for editing.\n\n\nThe app shows distinctions between high tide, muddy areas, and more.\n\n\n\n\nThe result is that users have more time to conduct analysis on other tasks.\n\n\nWhat type of data does Beachfront produce?\n\u00b6\n\n\n\n\n\n\nBeachfront extracts shorelines by examining available imagery. The app\n    commonly uses imagery that includes PlanetScope and Rapid Eye data\n    (3-to-5-meter resolution). Beachfront outputs vector data, most commonly\n    for coastlines.\n\n\n\n\n\n\nBeachfront also captures data on cloud cover, resolution, tide, time of\n    collection, and more in the metadata of the output vectors. Users can export\n    this data as GeoJSON, GeoPackage, or Shapefile.\n\n\n\n\n\n\nImpact to mission\n\u00b6\n\n\n\n\nReduced manual feature extraction time means more available time for other\n    tasks\n\n\nOn-demand products and tools reflect more current information by pulling\n    from multiple or the most recent datasets, rather than from dated,\n    mass-produced products\n\n\nScalable for use globally or in localized areas, depending on the mission\n\n\nTailored algorithms can be used for additional mission areas and feature\n    extraction types using the same architecture.\n\n\n\n\nHow can users access Beachfront?\n\u00b6\n\n\nBeachfront is accessible through GEOINT services:\n\n\n\n\nJWICS: \nhttps://home.gs.ic.gov/\n\n\nNIPRnet: \nhttps://home.gs.mil",
            "title": "Home"
        },
        {
            "location": "/#automated_coastline_extraction",
            "text": "",
            "title": "Automated Coastline Extraction"
        },
        {
            "location": "/#what_is_beachfront",
            "text": "Beachfront is a set of open-source cloud services that enables users to\nleverage detection algorithms and operational imagery sources to update global\ncoastline vectors. Users can exploit third-party imagery data using detection\nalgorithms to generate coastline vector data. It provides users the ability to\nautomatically extract large sections of coastline to produce timely, dynamic\ndata in support of multiple communities using the best-available source imagery.\nAlthough intended for shorelines, Beachfront can be modified to serve other\nfeature communities of interest to assist in automated feature and object\ndetection if other algorithms are available.   Disclaimer:  NGA leveraged the VeniceGeo open-source project to develop\nBeachfront and enabled it for use by the geospatial enterprise.",
            "title": "What is Beachfront?"
        },
        {
            "location": "/#benefits_of_beachfront",
            "text": "Previous shoreline extraction efforts used massive, infrequent efforts to digitize\nglobal shorelines. Beachfront drastically reduces the amount of time spent on manual\ndigitization of features, and allows for the constant update of feature data products on\ndemand.   Users can download only the imagery they need and obtain much more current\n    information for the specific sections of coast in which they are interested.  This app simplifies the process for the user by preventing the need to both\n    obtain large shapefiles and search through large outdated files. Users can\n    update coastline vector data as often as new source data is available.  Its auto-extraction feature exports immediately to ArcMap or QGIS for editing.  The app shows distinctions between high tide, muddy areas, and more.   The result is that users have more time to conduct analysis on other tasks.",
            "title": "Benefits of Beachfront"
        },
        {
            "location": "/#what_type_of_data_does_beachfront_produce",
            "text": "Beachfront extracts shorelines by examining available imagery. The app\n    commonly uses imagery that includes PlanetScope and Rapid Eye data\n    (3-to-5-meter resolution). Beachfront outputs vector data, most commonly\n    for coastlines.    Beachfront also captures data on cloud cover, resolution, tide, time of\n    collection, and more in the metadata of the output vectors. Users can export\n    this data as GeoJSON, GeoPackage, or Shapefile.",
            "title": "What type of data does Beachfront produce?"
        },
        {
            "location": "/#impact_to_mission",
            "text": "Reduced manual feature extraction time means more available time for other\n    tasks  On-demand products and tools reflect more current information by pulling\n    from multiple or the most recent datasets, rather than from dated,\n    mass-produced products  Scalable for use globally or in localized areas, depending on the mission  Tailored algorithms can be used for additional mission areas and feature\n    extraction types using the same architecture.",
            "title": "Impact to mission"
        },
        {
            "location": "/#how_can_users_access_beachfront",
            "text": "Beachfront is accessible through GEOINT services:   JWICS:  https://home.gs.ic.gov/  NIPRnet:  https://home.gs.mil",
            "title": "How can users access Beachfront?"
        },
        {
            "location": "/userguide/",
            "text": "User\u2019s Guide\n\u00b6\n\n\nSearching for Scenes\n\u00b6\n\n\n1. Navigate to the \nCreate Job\n Menu\n\u00b6\n\n\nThe scene search is a part of the job creation workflow:\n\n\n\n\n2. Draw a Bounding Box to Define the Search Space\n\u00b6\n\n\nDrawing a bounding box is a two-click process.  Click once to drop the first\ncorner and again to complete the bounding box:\n\n\n\n\n3. Adjust Search Criteria and then Execute Search\n\u00b6\n\n\n\n\nNote:\n Dates should be entered in \nYYYY-MM-DD\n format, e.g., \n2017-07-04\n.\n\n\n\n\nMake any necessary adjustments to the imagery source, cloud cover, and date\nrange, and then click the \nSearch for Imagery\n button to execute a search using\nthe selected filtering criteria:\n\n\n\n\nAfter a moment, footprints of the scenes found in the catalog should render on\nthe map. You can readjust the filtering criteria and re-execute the search as\nmany times as you need:\n\n\n\n\n4. Click a Scene\u2019s Footprint to Bring up Metadata and a Preview\n\u00b6\n\n\n\n\nNote\n: If the full-color preview does not load on the map, please contact\nthe Beachfront team for technical support.\n\n\n\n\n\n\nCreating a Job\n\u00b6\n\n\n\n\nNote:\n Start from the end of the instructions for \nSearching for Scenes\n.\n\n\n\n\n1. After Picking a Scene, Find a Compatible Algorithm\n\u00b6\n\n\nLook under the \nSelect Algorithm\n section to see what algorithms are available.\nSome algorithms have strict requirements in order to yield meaningful coastline vector data:\n\n\n\n\n\n\n\n2. After Picking an Algorithm, Submit the Scene for Processing\n\u00b6\n\n\n\n\nNote\n: By default, Beachfront will name the job after the scene being\nprocessed.  You can optionally give a custom name to a job if desired.\n\n\n\n\n\n\n\n\n\nNote\n: Algorithm processing time may vary depending on the size/age of the\nscene (i.e., bigger scenes require more time to process and older scenes\nrequire more time to request from archives), as well as the Beachfront system\nload at the time of execution. If a scene takes longer to process than two\nhours, please contact the Beachfront team for technical support.\n\n\n\n\nTo submit the scene for algorithm processing, click the \nRun Algorithm\n button:\n\n\n\n\nViewing a Job\u2019s Results\n\u00b6\n\n\n1. Navigate to the \nJobs\n Menu\n\u00b6\n\n\nThe \nJobs\n menu will list the status and details for all jobs you are tracking:\n\n\n\n\n2. Find the Job you Want to View and then Click \nView on Map\n\u00b6\n\n\n\n\nNote:\n You can also click any visible job frame directly on the map to \u201cselect\u201d it in the same way.\n\n\n\n\nSelecting a job from the \nJobs\n menu will pan and zoom the map to the job\u2019s frame:\n\n\n\n\n3. Shoreline Detections will Render for any Successful Job\n\u00b6\n\n\n\n\nNote:\n If you select a job that is currently running, shoreline detections automatically appear once it successfully completes.  If this does not happen, please notify the Beachfront team for technical support.\n\n\n\n\nYou can also view extra information about a particular job by expanding the job\u2019s\nrow in the \nJobs\n menu:\n\n\n\n\n4. Click \u201cDownload\u201d Button to Download Detections in QGIS compatible formats\n\u00b6\n\n\nYou can download the shoreline result in a few geospatial formats. They will\neach have a filename based on the source image. For example, using a Landsat8\nsource:\n\n\n\n\nGeoJSON - \nLC80150442018109LGN00.geojson\n\n\nGeoPackage - \nLC80150442018109LGN00.gpkg\n\n\nShapefile - \nLC80150442018109LGN00.zip\n (container for the multiple relevant files)\n\n\n\n\n\n\nRemoving a Job from your Jobs List\n\u00b6\n\n\n1. Navigate to the \nJobs\n Menu\n\u00b6\n\n\nThe \nJobs\n menu will list the status and details for all jobs you are tracking:\n\n\n\n\n2. Expand the Job\u2019s Details, then Click \nRemove this Job\n\u00b6\n\n\n\n\nNote:\n The job does not get deleted from the system; it just won\u2019t show up in your tracking list anymore unless you visit that job\u2019s URL again.",
            "title": "Beachfront"
        },
        {
            "location": "/userguide/#users_guide",
            "text": "",
            "title": "User's Guide"
        },
        {
            "location": "/userguide/#searching_for_scenes",
            "text": "",
            "title": "Searching for Scenes"
        },
        {
            "location": "/userguide/#1_navigate_to_the_create_job_menu",
            "text": "The scene search is a part of the job creation workflow:",
            "title": "1. Navigate to the Create Job Menu"
        },
        {
            "location": "/userguide/#2_draw_a_bounding_box_to_define_the_search_space",
            "text": "Drawing a bounding box is a two-click process.  Click once to drop the first\ncorner and again to complete the bounding box:",
            "title": "2. Draw a Bounding Box to Define the Search Space"
        },
        {
            "location": "/userguide/#3_adjust_search_criteria_and_then_execute_search",
            "text": "Note:  Dates should be entered in  YYYY-MM-DD  format, e.g.,  2017-07-04 .   Make any necessary adjustments to the imagery source, cloud cover, and date\nrange, and then click the  Search for Imagery  button to execute a search using\nthe selected filtering criteria:   After a moment, footprints of the scenes found in the catalog should render on\nthe map. You can readjust the filtering criteria and re-execute the search as\nmany times as you need:",
            "title": "3. Adjust Search Criteria and then Execute Search"
        },
        {
            "location": "/userguide/#4_click_a_scenes_footprint_to_bring_up_metadata_and_a_preview",
            "text": "Note : If the full-color preview does not load on the map, please contact\nthe Beachfront team for technical support.",
            "title": "4. Click a Scene's Footprint to Bring up Metadata and a Preview"
        },
        {
            "location": "/userguide/#creating_a_job",
            "text": "Note:  Start from the end of the instructions for  Searching for Scenes .",
            "title": "Creating a Job"
        },
        {
            "location": "/userguide/#1_after_picking_a_scene_find_a_compatible_algorithm",
            "text": "Look under the  Select Algorithm  section to see what algorithms are available.\nSome algorithms have strict requirements in order to yield meaningful coastline vector data:",
            "title": "1. After Picking a Scene, Find a Compatible Algorithm"
        },
        {
            "location": "/userguide/#2_after_picking_an_algorithm_submit_the_scene_for_processing",
            "text": "Note : By default, Beachfront will name the job after the scene being\nprocessed.  You can optionally give a custom name to a job if desired.     Note : Algorithm processing time may vary depending on the size/age of the\nscene (i.e., bigger scenes require more time to process and older scenes\nrequire more time to request from archives), as well as the Beachfront system\nload at the time of execution. If a scene takes longer to process than two\nhours, please contact the Beachfront team for technical support.   To submit the scene for algorithm processing, click the  Run Algorithm  button:",
            "title": "2. After Picking an Algorithm, Submit the Scene for Processing"
        },
        {
            "location": "/userguide/#viewing_a_jobs_results",
            "text": "",
            "title": "Viewing a Job's Results"
        },
        {
            "location": "/userguide/#1_navigate_to_the_jobs_menu",
            "text": "The  Jobs  menu will list the status and details for all jobs you are tracking:",
            "title": "1. Navigate to the Jobs Menu"
        },
        {
            "location": "/userguide/#2_find_the_job_you_want_to_view_and_then_click_view_on_map",
            "text": "Note:  You can also click any visible job frame directly on the map to \u201cselect\u201d it in the same way.   Selecting a job from the  Jobs  menu will pan and zoom the map to the job\u2019s frame:",
            "title": "2. Find the Job you Want to View and then Click View on Map"
        },
        {
            "location": "/userguide/#3_shoreline_detections_will_render_for_any_successful_job",
            "text": "Note:  If you select a job that is currently running, shoreline detections automatically appear once it successfully completes.  If this does not happen, please notify the Beachfront team for technical support.   You can also view extra information about a particular job by expanding the job\u2019s\nrow in the  Jobs  menu:",
            "title": "3. Shoreline Detections will Render for any Successful Job"
        },
        {
            "location": "/userguide/#4_click_download_button_to_download_detections_in_qgis_compatible_formats",
            "text": "You can download the shoreline result in a few geospatial formats. They will\neach have a filename based on the source image. For example, using a Landsat8\nsource:   GeoJSON -  LC80150442018109LGN00.geojson  GeoPackage -  LC80150442018109LGN00.gpkg  Shapefile -  LC80150442018109LGN00.zip  (container for the multiple relevant files)",
            "title": "4. Click \"Download\" Button to Download Detections in QGIS compatible formats"
        },
        {
            "location": "/userguide/#removing_a_job_from_your_jobs_list",
            "text": "",
            "title": "Removing a Job from your Jobs List"
        },
        {
            "location": "/userguide/#1_navigate_to_the_jobs_menu_1",
            "text": "The  Jobs  menu will list the status and details for all jobs you are tracking:",
            "title": "1. Navigate to the Jobs Menu"
        },
        {
            "location": "/userguide/#2_expand_the_jobs_details_then_click_remove_this_job",
            "text": "Note:  The job does not get deleted from the system; it just won\u2019t show up in your tracking list anymore unless you visit that job\u2019s URL again.",
            "title": "2. Expand the Job's Details, then Click Remove this Job"
        },
        {
            "location": "/userguide/algorithms/",
            "text": "Algorithms\n\u00b6\n\n\nNDWI\n\u00b6\n\n\nWhile bfalg-ndwi can be used as a Python library (as from the Beachfront web app),\nit can also be run using the Command Line Interface (CLI). Use the help switch\n(-h or \u2013help) to display inline help.\n\n\nThe parameters listed below may also be set through the Beachfront UI.\n\n\n$ python bfalg_ndwi.py -h\nusage: bfalg-ndwi [-h] -i INPUT [-b BANDS BANDS] [--outdir OUTDIR]\n                  [--basename BASENAME] [--l8bqa L8BQA] [--coastmask]\n                  [--minsize MINSIZE] [--close CLOSE] [--simple SIMPLE]\n                  [--verbose VERBOSE] [--version]\n\nBeachfront Algorithm: NDWI (v1.0.8)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        Input image (1 or 2 files) (default: None)\n  -b BANDS BANDS, --bands BANDS BANDS\n                        Band numbers for Green and NIR bands (default: [1, 1])\n  --outdir OUTDIR       Save intermediate files to this dir (otherwise temp)\n                        (default: )\n  --basename BASENAME   Basename to give to output files (no extension,\n                        defaults to first input filename (default: None)\n  --l8bqa L8BQA         Landat 8 Quality band (used to mask clouds) (default:\n                        None)\n  --coastmask           Mask non-coastline areas (default: False)\n  --minsize MINSIZE     Minimum coastline size (default: 100.0)\n  --close CLOSE         Close line strings within given pixels (default: 5)\n  --simple SIMPLE       Simplify using tolerance in map units (default: None)\n  --verbose VERBOSE     0: Quiet, 1: Debug, 2: Info, 3: Warn, 4: Error, 5:\n                        Critical (default: 2)\n  --version             Print version and exit\n\n\n\n\nIf a single filename is provided via the INPUT argument, then BANDS needs to be\nprovided to specify which bands in the file should be used. Otherwise it defaults\nto \u20181, 1\u2019, meaning it would use the same band for both Green and NIR. This example\nuses the first band in the file as the Green band and the fifth as the NIR.\n\n\n$ bfalg-ndwi -i test1.tif -b 1 5\n\n\n\n\nIf the INPUT parameter is provided twice for two filenames, then BANDS is the band\nnumber for the first file (Green) and the second file (NIR). This example uses\nthe second band from the \ntest1.tif\n as the Green band, and the first band from\n\ntest2.tif\n as the NIR band.\n\n\n$ bfalg-ndwi -i test1.tif -i test2.tif -b 2 1\n\n\n\n\nInput files are all that are absolutely required, but a more typical scenario\nwould look like this (using the CLI):\n\n\n$ bfalg-ndwi -i scene123.tif -b 1 2 --basename testrun --outdir scene123-output --coastmask\n\n\n\n\nThis will apply the included buffered coastline (\nbfalg_ndwi/coastmask.shp\n) to\nthe image to mask out non-coastal regions. It will store all output files with\nthe name \ntestrun\n (+ additional tag and extension, e.g. \ntestrun.geojson\n,\n\ntestrun_otsu.TIF\n) in the directory \nscene123-output/\n.\n\n\nFor Landsat8: If the BQA band is available, it can be provided which will mask\nout the clouds from the scene.\n\n\n$ bfalg-ndwi -i LC80080282016215LGN00_B1.TIF -i LC80080282016215LGN00_B5.TIF --l8bqa LC80080282016215LGN00_BQA.TIF --basename LC80080282016215LGN00 --outdir LC80080282016215LGN00_test --coastmask\n\n\n\n\nThe last three remaining parametes are tuning parameters involving the creation\nof the vector output.\n\n\n\n\nminsize\n (100): This is the minimum size a linestring should be before being\n    filtered out. This corresponds to the \npotrace\n \nparameter\n\n    \n-t\n/\n--turdsize\n, and is not the length of the line but rather some measure\n    of the extent of it. The default of 10 will not filter out many lines. For\n    Landsat, a value of 100 works well at removing false coasts, but may also\n    remove islands or smaller incomplete shorelines.\n\n\nclose\n (5): Linestrings will be closed if their two endpoints are within this\n    number of pixels. The default is 5 and setting it to 0 will turn it off. This\n    should not be set to a value much higher than 10.\n\n\nsimplify\n (None): Simplification will not be done by default. If provided, it\n    is in units of degrees and is used to simplify and smooth the output.\n    Simplification is heavily application and source imagery dependent, and is a\n    lossy process. Consider starting points for RapidEye and PlanetScope data to be\n    0.00035, and  0.0007 for Landsat8.\n\n\n\n\nBand Combinations\n\u00b6\n\n\nThe traditional NDWI algorithm uses the Green and NIR bands to calculate a\nnormalized difference index:\n\n\nNDWI = (green-nir) / (green+nir)\n\n\n\n\nThe band names Green and NIR are what is referenced to in the online help.\nHowever, other bands can work as well or even better on some instruments. The\nGreen band is a band that has a high water reflectance, while the NIR band is a\nband that has a very low water reflectance. The following bands are recommended.\n\n\n\n\n\n\n\n\nSensor\n\n\n\u2018Green\u2019 band\n\n\n\u2018NIR\u2019 band\n\n\n\n\n\n\n\n\n\n\nLandsat8\n\n\n1 (Coastal)\n\n\n5 (NIR)\n\n\n\n\n\n\nRapidEye\n\n\n2 (Green)\n\n\n4 (NIR)\n\n\n\n\n\n\nPlanetSceope\n\n\n2 (Green)\n\n\n4 (NIR)\n\n\n\n\n\n\nSentinel-2\n\n\n2 (Blue)\n\n\n8 (NIR)",
            "title": "Algorithms"
        },
        {
            "location": "/userguide/algorithms/#algorithms",
            "text": "",
            "title": "Algorithms"
        },
        {
            "location": "/userguide/algorithms/#ndwi",
            "text": "While bfalg-ndwi can be used as a Python library (as from the Beachfront web app),\nit can also be run using the Command Line Interface (CLI). Use the help switch\n(-h or \u2013help) to display inline help.  The parameters listed below may also be set through the Beachfront UI.  $ python bfalg_ndwi.py -h\nusage: bfalg-ndwi [-h] -i INPUT [-b BANDS BANDS] [--outdir OUTDIR]\n                  [--basename BASENAME] [--l8bqa L8BQA] [--coastmask]\n                  [--minsize MINSIZE] [--close CLOSE] [--simple SIMPLE]\n                  [--verbose VERBOSE] [--version]\n\nBeachfront Algorithm: NDWI (v1.0.8)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        Input image (1 or 2 files) (default: None)\n  -b BANDS BANDS, --bands BANDS BANDS\n                        Band numbers for Green and NIR bands (default: [1, 1])\n  --outdir OUTDIR       Save intermediate files to this dir (otherwise temp)\n                        (default: )\n  --basename BASENAME   Basename to give to output files (no extension,\n                        defaults to first input filename (default: None)\n  --l8bqa L8BQA         Landat 8 Quality band (used to mask clouds) (default:\n                        None)\n  --coastmask           Mask non-coastline areas (default: False)\n  --minsize MINSIZE     Minimum coastline size (default: 100.0)\n  --close CLOSE         Close line strings within given pixels (default: 5)\n  --simple SIMPLE       Simplify using tolerance in map units (default: None)\n  --verbose VERBOSE     0: Quiet, 1: Debug, 2: Info, 3: Warn, 4: Error, 5:\n                        Critical (default: 2)\n  --version             Print version and exit  If a single filename is provided via the INPUT argument, then BANDS needs to be\nprovided to specify which bands in the file should be used. Otherwise it defaults\nto \u20181, 1\u2019, meaning it would use the same band for both Green and NIR. This example\nuses the first band in the file as the Green band and the fifth as the NIR.  $ bfalg-ndwi -i test1.tif -b 1 5  If the INPUT parameter is provided twice for two filenames, then BANDS is the band\nnumber for the first file (Green) and the second file (NIR). This example uses\nthe second band from the  test1.tif  as the Green band, and the first band from test2.tif  as the NIR band.  $ bfalg-ndwi -i test1.tif -i test2.tif -b 2 1  Input files are all that are absolutely required, but a more typical scenario\nwould look like this (using the CLI):  $ bfalg-ndwi -i scene123.tif -b 1 2 --basename testrun --outdir scene123-output --coastmask  This will apply the included buffered coastline ( bfalg_ndwi/coastmask.shp ) to\nthe image to mask out non-coastal regions. It will store all output files with\nthe name  testrun  (+ additional tag and extension, e.g.  testrun.geojson , testrun_otsu.TIF ) in the directory  scene123-output/ .  For Landsat8: If the BQA band is available, it can be provided which will mask\nout the clouds from the scene.  $ bfalg-ndwi -i LC80080282016215LGN00_B1.TIF -i LC80080282016215LGN00_B5.TIF --l8bqa LC80080282016215LGN00_BQA.TIF --basename LC80080282016215LGN00 --outdir LC80080282016215LGN00_test --coastmask  The last three remaining parametes are tuning parameters involving the creation\nof the vector output.   minsize  (100): This is the minimum size a linestring should be before being\n    filtered out. This corresponds to the  potrace   parameter \n     -t / --turdsize , and is not the length of the line but rather some measure\n    of the extent of it. The default of 10 will not filter out many lines. For\n    Landsat, a value of 100 works well at removing false coasts, but may also\n    remove islands or smaller incomplete shorelines.  close  (5): Linestrings will be closed if their two endpoints are within this\n    number of pixels. The default is 5 and setting it to 0 will turn it off. This\n    should not be set to a value much higher than 10.  simplify  (None): Simplification will not be done by default. If provided, it\n    is in units of degrees and is used to simplify and smooth the output.\n    Simplification is heavily application and source imagery dependent, and is a\n    lossy process. Consider starting points for RapidEye and PlanetScope data to be\n    0.00035, and  0.0007 for Landsat8.",
            "title": "NDWI"
        },
        {
            "location": "/userguide/algorithms/#band_combinations",
            "text": "The traditional NDWI algorithm uses the Green and NIR bands to calculate a\nnormalized difference index:  NDWI = (green-nir) / (green+nir)  The band names Green and NIR are what is referenced to in the online help.\nHowever, other bands can work as well or even better on some instruments. The\nGreen band is a band that has a high water reflectance, while the NIR band is a\nband that has a very low water reflectance. The following bands are recommended.     Sensor  \u2018Green\u2019 band  \u2018NIR\u2019 band      Landsat8  1 (Coastal)  5 (NIR)    RapidEye  2 (Green)  4 (NIR)    PlanetSceope  2 (Green)  4 (NIR)    Sentinel-2  2 (Blue)  8 (NIR)",
            "title": "Band Combinations"
        },
        {
            "location": "/userguide/tide-prediction/",
            "text": "Tide Prediction\n\u00b6\n\n\nDescription\n\u00b6\n\n\nBf-tideprediction is a Beachfront service that estimates the tide level for a\ngiven date/time, as well as the 24-hour min/max tides and corresponding times\nsurrounding that date/time.  This service is used by Beachfront to provide\ncontextual information to be used in conjunction with Beachfront\u2019s shoreline\nextraction services.\n\n\nWhy are tides important for shoreline extraction?\n\u00b6\n\n\nThe shoreline can be drastically different depending on the status of the tides\nat the time the imagery was captured. For example:\n\n\n\n\nWhy create a new tide service instead of using a third-party service?\n\u00b6\n\n\n\n\nLimited API access\n\n\nMost services offer either historic tide data or predict future tides but not both\n\n\nCost - best services require user subscriptions\n\n\nQuery locations visible to third party\n\n\nInability to migrate to classified environment\n\n\nReliance on third party server availability\n\n\n\n\nOperation\n\u00b6\n\n\nBf-tideprediction works in both individual and batch modes.\n\n\nIndividual Query Mode:\n\u00b6\n\n\nAPI\n\u00b6\n\n\nThe individual mode has an API endpoint of\n\nhttps://bf-tideprediction.geointservices.io\n and accepts the following keys\nin a POST request:\n\n\n\n\n\n\n\n\nKeys\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nlat\n\n\ndecimal degrees between -90 and 90\n\n\n\n\n\n\nlon\n\n\ndecimal degrees between -180 and 180\n\n\n\n\n\n\ndtg\n\n\nDate/Time in format : YYYY-MM-DD-HH-MM (Universal Standard Time)\n\n\n\n\n\n\n\n\nSample Query:\n\n\ncurl -X POST -d 'lat=-33.85&lon=151&dtg=2016-05-31-0-1' \"https://bf-tideprediction.geointservices.io/\"\n\n\n\n\nWeb Interface\n\u00b6\n\n\nThe individual query mode also has a web-based form.  Enter coordinates in\ndecimal degrees, and provide the date and time in the format \nYYYY-mm-DD-HH-MM\n\nin UST.  Select \u201cCalculate\u201d and the results will be returned in the browser as\na json file.\n\n\n\n\nBatch Queries\n\u00b6\n\n\nThe API also supports querying for batch collections of locations. To do so,\nuse a JSON body structured in this way:\n\n\n{\n  \"locations\": [\n    {\n      \"dtg\": \"some_dtg1\",\n      \"lat\": \"some_lat1\",\n      \"lon\": \"some_lon1\"\n    },\n    {\n      \"dtg\": \"some_dtg2\",\n      \"lat\": \"some_lat2\",\n      \"lon\": \"some_lon2\"\n    }\n  ]\n}\n\n\n\n\nSample Query:\n\n\ncurl -X POST -H \"Content-Type: application/json\"  -d '{\"locations\": [{\"lat\": \\73.63008647322661, \"lon\": -81.5557487110026, \"dtg\": \"2015-12-20-09-36\"}]}' \"https://tideprediction.stage.geointservices.io/tides\"\n\n\n\n\nAlgorithm\n\u00b6\n\n\nBeachfront\u2019s Tide Prediction service utilizes the Python library\n\npytides\n to predict past and future\ntides.  These predictions are based upon harmonic constituents estimated from\nhistorical sea level buoy data. The service accepts a latitude/longitude pair\nand a Date Time Group (DTG) and returns the current tide level at that time, as\nwell as the minimum and maximum of the 24-hour period following the time.\n\n\nAccording to their documentation, \npytide\n\u2018s tidal prediction is based upon\nseveral fundamental assumptions.  The first assumption is that tides anywhere\non Earth are caused solely by the gravitational forces of the moon and the sun.\nPytides neglects the gravitational forces of other planetary bodies, as their\neffect on the tide is several orders of magnitude weaker than those of the moon\nand sun.  The second assumption is that for any given location on Earth, there\nexists constant values such that the tide there obeys this relation.  So if we\nhave many past measurements of the tide at a given location, we can attempt to\nchoose values that best fit our previous readings. By assumption, we can then\npredict the future tide by allowing it to increase into the future.\n\n\n\n\nBeachfront\u2019s Tide Prediction service obtains these historic measurements by\nquerying the GLOSS buoy network.  The service takes latitude and longitude\ncoordinates, as well as a DTG.  A lookup table hosted by bf-tideprediction\ncalculates the station ID for the appropriate sea level monitoring stations.\nUtilizing a locally stored database of historic sea level data, constituents\nare calculated for each appropriate station.  The tides are then predicted for\nthose stations in a 24 hour period surrounding the image DTG on a minute by\nminute basis.  These data points are interpolated to provide sea level height\nfor the image DTG, and a minimum and maximum tide height for a given time\nperiod.\n\n\n\n\nGloss Buoy Locations\n\u00b6\n\n\n\n\nDensity Map of Gloss Buoy Locations\n\u00b6\n\n\nA lookup table hosted by \nbf-tideprediction\n calculates the station ID for the\nappropriate sea level monitoring stations by querying the coordinates against a\npre-computed set of Voronoi polygons.  In mathematics, a Voronoi diagram is a\npartitioning of a plane into regions based on distance to points in a specific\nsubset of the plane.  For each initial point (or seed), there is a\ncorresponding polygon consisting of all points closer to that seed than to any\nother. These regions are called Voronoi cells.  For the Beachfront Tide\nPrediction service, a one-time calculation of Voronoi polygons was generated\nfor the Gloss Buoy data.  For a given coordinate, the corresponding known point\nis queried  This is simpler than triangulating between the points of a Delaunay\ntriangle, but may be less accurate as its based on a single known point.\n\n\n\n\n\n\nSource: \nhttps://commons.wikimedia.org/wiki/File:Euclidean_Voronoi_diagram.svg",
            "title": "Tide Prediction"
        },
        {
            "location": "/userguide/tide-prediction/#tide_prediction",
            "text": "",
            "title": "Tide Prediction"
        },
        {
            "location": "/userguide/tide-prediction/#description",
            "text": "Bf-tideprediction is a Beachfront service that estimates the tide level for a\ngiven date/time, as well as the 24-hour min/max tides and corresponding times\nsurrounding that date/time.  This service is used by Beachfront to provide\ncontextual information to be used in conjunction with Beachfront\u2019s shoreline\nextraction services.",
            "title": "Description"
        },
        {
            "location": "/userguide/tide-prediction/#why_are_tides_important_for_shoreline_extraction",
            "text": "The shoreline can be drastically different depending on the status of the tides\nat the time the imagery was captured. For example:",
            "title": "Why are tides important for shoreline extraction?"
        },
        {
            "location": "/userguide/tide-prediction/#why_create_a_new_tide_service_instead_of_using_a_third-party_service",
            "text": "Limited API access  Most services offer either historic tide data or predict future tides but not both  Cost - best services require user subscriptions  Query locations visible to third party  Inability to migrate to classified environment  Reliance on third party server availability",
            "title": "Why create a new tide service instead of using a third-party service?"
        },
        {
            "location": "/userguide/tide-prediction/#operation",
            "text": "Bf-tideprediction works in both individual and batch modes.",
            "title": "Operation"
        },
        {
            "location": "/userguide/tide-prediction/#individual_query_mode",
            "text": "",
            "title": "Individual Query Mode:"
        },
        {
            "location": "/userguide/tide-prediction/#api",
            "text": "The individual mode has an API endpoint of https://bf-tideprediction.geointservices.io  and accepts the following keys\nin a POST request:     Keys  Description      lat  decimal degrees between -90 and 90    lon  decimal degrees between -180 and 180    dtg  Date/Time in format : YYYY-MM-DD-HH-MM (Universal Standard Time)     Sample Query:  curl -X POST -d 'lat=-33.85&lon=151&dtg=2016-05-31-0-1' \"https://bf-tideprediction.geointservices.io/\"",
            "title": "API"
        },
        {
            "location": "/userguide/tide-prediction/#web_interface",
            "text": "The individual query mode also has a web-based form.  Enter coordinates in\ndecimal degrees, and provide the date and time in the format  YYYY-mm-DD-HH-MM \nin UST.  Select \u201cCalculate\u201d and the results will be returned in the browser as\na json file.",
            "title": "Web Interface"
        },
        {
            "location": "/userguide/tide-prediction/#batch_queries",
            "text": "The API also supports querying for batch collections of locations. To do so,\nuse a JSON body structured in this way:  {\n  \"locations\": [\n    {\n      \"dtg\": \"some_dtg1\",\n      \"lat\": \"some_lat1\",\n      \"lon\": \"some_lon1\"\n    },\n    {\n      \"dtg\": \"some_dtg2\",\n      \"lat\": \"some_lat2\",\n      \"lon\": \"some_lon2\"\n    }\n  ]\n}  Sample Query:  curl -X POST -H \"Content-Type: application/json\"  -d '{\"locations\": [{\"lat\": \\73.63008647322661, \"lon\": -81.5557487110026, \"dtg\": \"2015-12-20-09-36\"}]}' \"https://tideprediction.stage.geointservices.io/tides\"",
            "title": "Batch Queries"
        },
        {
            "location": "/userguide/tide-prediction/#algorithm",
            "text": "Beachfront\u2019s Tide Prediction service utilizes the Python library pytides  to predict past and future\ntides.  These predictions are based upon harmonic constituents estimated from\nhistorical sea level buoy data. The service accepts a latitude/longitude pair\nand a Date Time Group (DTG) and returns the current tide level at that time, as\nwell as the minimum and maximum of the 24-hour period following the time.  According to their documentation,  pytide \u2018s tidal prediction is based upon\nseveral fundamental assumptions.  The first assumption is that tides anywhere\non Earth are caused solely by the gravitational forces of the moon and the sun.\nPytides neglects the gravitational forces of other planetary bodies, as their\neffect on the tide is several orders of magnitude weaker than those of the moon\nand sun.  The second assumption is that for any given location on Earth, there\nexists constant values such that the tide there obeys this relation.  So if we\nhave many past measurements of the tide at a given location, we can attempt to\nchoose values that best fit our previous readings. By assumption, we can then\npredict the future tide by allowing it to increase into the future.   Beachfront\u2019s Tide Prediction service obtains these historic measurements by\nquerying the GLOSS buoy network.  The service takes latitude and longitude\ncoordinates, as well as a DTG.  A lookup table hosted by bf-tideprediction\ncalculates the station ID for the appropriate sea level monitoring stations.\nUtilizing a locally stored database of historic sea level data, constituents\nare calculated for each appropriate station.  The tides are then predicted for\nthose stations in a 24 hour period surrounding the image DTG on a minute by\nminute basis.  These data points are interpolated to provide sea level height\nfor the image DTG, and a minimum and maximum tide height for a given time\nperiod.",
            "title": "Algorithm"
        },
        {
            "location": "/userguide/tide-prediction/#gloss_buoy_locations",
            "text": "",
            "title": "Gloss Buoy Locations"
        },
        {
            "location": "/userguide/tide-prediction/#density_map_of_gloss_buoy_locations",
            "text": "A lookup table hosted by  bf-tideprediction  calculates the station ID for the\nappropriate sea level monitoring stations by querying the coordinates against a\npre-computed set of Voronoi polygons.  In mathematics, a Voronoi diagram is a\npartitioning of a plane into regions based on distance to points in a specific\nsubset of the plane.  For each initial point (or seed), there is a\ncorresponding polygon consisting of all points closer to that seed than to any\nother. These regions are called Voronoi cells.  For the Beachfront Tide\nPrediction service, a one-time calculation of Voronoi polygons was generated\nfor the Gloss Buoy data.  For a given coordinate, the corresponding known point\nis queried  This is simpler than triangulating between the points of a Delaunay\ntriangle, but may be less accurate as its based on a single known point.    Source:  https://commons.wikimedia.org/wiki/File:Euclidean_Voronoi_diagram.svg",
            "title": "Density Map of Gloss Buoy Locations"
        },
        {
            "location": "/release_notes/Version2/",
            "text": "GEOINT Services | Release Notes\n\u00b6\n\n\n\n\n\n\nVersion 2.0\n\u00b6\n\n\nDate and version number of current changes: 01 May 2018, v2.0\n\n\nBeachfront 2.0 builds on Beachfront 1.0 and Piazza and starts to combine the\ntwo applications into one finding efficiencies.  These release notes contain\nthe Beachfront 1.0 and Piazza MVP since those versions of the software were not\never officially delivered and granted ATO through NGA.  Beachfront 2.0 in UC\nwill enable users to securely login using GEOAxIS, search-activated PlanetDAS\nprovided imagery, execute coastline detection using an NDWI-based algorithm\nservice, and download tide-coordinated vector outputs after detection job\nexecution. Piazza capabilities have been absorbed into Beachfront and it will be\nATO\u2019d as one project, referred to as Beachfront_Piazza in this document going\nforward.\n\n\nThe following additions and enhancements were made within the 2.0 release:\n\n\nBeachfront User Interface:\n\u00b6\n\n\n\n\nUsers will be able to interact with the Beachfront system through a\n    map-driven user interface at \nhttps://beachfront.gs.mil\n\n\nOSM Basemap Tiles will be the basemap until more become available\n\n\n\n\nGeoAxis User Authentication:\n\u00b6\n\n\n\n\nUsers will be able to login using their GeoAxis credentials (PKI,\n    Disadvantaged User Account, Austere Account) through an OAuth2-enabled system\n\n\n\n\nSearching Planet Data to run Coastline Detection on through PlanetDAS:\n\u00b6\n\n\n\n\nUser-controlled search of active AOIs and TOIs of RapidEye, PlanetScope, and\n    Copernicus Sentinel-2 imagery can be made using the following filters:\n\n\nSpatial\n\n\nTemporal\n\n\nCloud Cover\n\n\n\n\n\n\nUsers can choose between searching RapidEye, PlanetScope, or Sentinel-2\n    imagery for candidate scenes/tiles\n\n\n\n\nScene/Tile Preview of Planet Data (provided by PlanetDAS):\n\u00b6\n\n\n\n\nEnables users to visually inspect image scenes/tiles provided by Planet DAS,\n    e.g., Planet DAS tile server dependency, prior to detection job execution\n\n\nEnables user download to a local machine\n\n\nVector outputs will be in GeoJSON, GeoPackage, or Shapefile format\n    (user\u2019s choice)\n\n\n\n\n\n\n\n\nSingle Scene Coastline Detection Job Execution (Register and Execute an Algorithm):\n\u00b6\n\n\n\n\nUsers can execute coastline detection using a NDWI-based Python algorithm\n    combined with avectorization component in one detection service\n\n\nBeachfront fetches required Planet scene/tile analytic asset and stages for\n    processing\n\n\nBeachfront processes pixels with the algorithm and provides vector output\n    of a shoreline detection.\n\n\n\n\nTide Prediction Service:\n\u00b6\n\n\n\n\nBeachfront calls a Global Tide Prediction Service upon scene selection using\n    the centroid of the scene and time of collect in order to predict a tidal\n    height, using a 24-hour low and high value, and decorates every output\n    feature with this metadata\n\n\n\n\nOutput Vector Data:\n\u00b6\n\n\n\n\nOutput vector metadata (at feature level) provides the following\n    attribution (and JSON types) relevant to the job it was created by:\n\n\n\n\n\n\n\n\n\n\nField\n\n\nType\n\n\n\n\n\n\n\n\n\n\nid\n\n\ntext\n\n\n\n\n\n\njob_id\n\n\ntext\n\n\n\n\n\n\nalgorithm_id\n\n\ntext\n\n\n\n\n\n\nalgorithm_name\n\n\ntext\n\n\n\n\n\n\nalgorithm_version\n\n\ntext\n\n\n\n\n\n\ncloud_cover\n\n\nnumber\n\n\n\n\n\n\ncreated_by\n\n\ntext\n\n\n\n\n\n\ncreated_on\n\n\ntext (ISO-8601 date/time)\n\n\n\n\n\n\nname\n\n\ntext\n\n\n\n\n\n\nresolution\n\n\nnumber\n\n\n\n\n\n\nscene_id\n\n\ntext\n\n\n\n\n\n\nsensor_name\n\n\ntext\n\n\n\n\n\n\nstatus\n\n\ntext\n\n\n\n\n\n\ntide\n\n\nnumber\n\n\n\n\n\n\ntide_min_24h\n\n\nnumber\n\n\n\n\n\n\ntide_max_24h\n\n\nnumber\n\n\n\n\n\n\ntime_of_collect\n\n\ntext (ISO-8601 date/time)\n\n\n\n\n\n\ndata_usage\n\n\ntext\n\n\n\n\n\n\nclassification\n\n\ntext\n\n\n\n\n\n\n\n\nJobs List:\n\u00b6\n\n\n\n\nJobs List provides user ability to return to view historical jobs and their\n    success/failure\n\n\n\n\nPerformance Enhancements:\n\u00b6\n\n\n\n\nNon-redundant processing and caching of detections, increasing\n    performance and efficiency\n\n\nAPI micro-service refactored to achieve better maintainability, reliability,\n    and configuration integration with the deployment environment\n\n\nJob executor service refactored for better horizontal scaling, increasing\n    concurrent user capacity by 3x\n\n\nDecreased processing time by 3x through various performance improvements\n\n\n\n\nBug Fixes:\n\u00b6\n\n\n\n\nSignificant amount of work went into geting the NDWI to correct output\n    coastline vectors onto the UI.\n\n\n\n\nFeatures or functionality retired in Beachfront 1.0:\n\u00b6\n\n\n\n\nPiazza will no longer be refer to as a separate application.  By combining\n    the two applications, the architecture was simplified. This has resulted\n    in better maintainability and faster development.\n\n\n\n\nImprovements from previous version:\n\u00b6\n\n\n\n\nN/A\n\n\n\n\nSystem Requirements:\n\u00b6\n\n\nData exported from Beachfront 1.x is viewable in Boundless Desktop/QGIS, ArcGIS 10.3 (and later versions) with the Data Interoperability Extension, and GEOINT Viewer as GeoJSON and GeoPackage file formats\n\n\nBrowser requirements for the Beachfront web user interface:\n\n\n\n\nRecommended:\n Chrome 55 and later\n\n\nFirefox 45 and later\n\n\n\n\n\n\n\n\nAdditional Info\n\nFor more information on the release, please use the Beachfront\n\u201cAsk the Expert\u201d channel.",
            "title": "Version 2.0"
        },
        {
            "location": "/release_notes/Version2/#geoint_services_release_notes",
            "text": "",
            "title": "GEOINT Services | Release Notes"
        },
        {
            "location": "/release_notes/Version2/#version_20",
            "text": "Date and version number of current changes: 01 May 2018, v2.0  Beachfront 2.0 builds on Beachfront 1.0 and Piazza and starts to combine the\ntwo applications into one finding efficiencies.  These release notes contain\nthe Beachfront 1.0 and Piazza MVP since those versions of the software were not\never officially delivered and granted ATO through NGA.  Beachfront 2.0 in UC\nwill enable users to securely login using GEOAxIS, search-activated PlanetDAS\nprovided imagery, execute coastline detection using an NDWI-based algorithm\nservice, and download tide-coordinated vector outputs after detection job\nexecution. Piazza capabilities have been absorbed into Beachfront and it will be\nATO\u2019d as one project, referred to as Beachfront_Piazza in this document going\nforward.  The following additions and enhancements were made within the 2.0 release:",
            "title": "Version 2.0"
        },
        {
            "location": "/release_notes/Version2/#beachfront_user_interface",
            "text": "Users will be able to interact with the Beachfront system through a\n    map-driven user interface at  https://beachfront.gs.mil  OSM Basemap Tiles will be the basemap until more become available",
            "title": "Beachfront User Interface:"
        },
        {
            "location": "/release_notes/Version2/#geoaxis_user_authentication",
            "text": "Users will be able to login using their GeoAxis credentials (PKI,\n    Disadvantaged User Account, Austere Account) through an OAuth2-enabled system",
            "title": "GeoAxis User Authentication:"
        },
        {
            "location": "/release_notes/Version2/#searching_planet_data_to_run_coastline_detection_on_through_planetdas",
            "text": "User-controlled search of active AOIs and TOIs of RapidEye, PlanetScope, and\n    Copernicus Sentinel-2 imagery can be made using the following filters:  Spatial  Temporal  Cloud Cover    Users can choose between searching RapidEye, PlanetScope, or Sentinel-2\n    imagery for candidate scenes/tiles",
            "title": "Searching Planet Data to run Coastline Detection on through PlanetDAS:"
        },
        {
            "location": "/release_notes/Version2/#scenetile_preview_of_planet_data_provided_by_planetdas",
            "text": "Enables users to visually inspect image scenes/tiles provided by Planet DAS,\n    e.g., Planet DAS tile server dependency, prior to detection job execution  Enables user download to a local machine  Vector outputs will be in GeoJSON, GeoPackage, or Shapefile format\n    (user\u2019s choice)",
            "title": "Scene/Tile Preview of Planet Data (provided by PlanetDAS):"
        },
        {
            "location": "/release_notes/Version2/#single_scene_coastline_detection_job_execution_register_and_execute_an_algorithm",
            "text": "Users can execute coastline detection using a NDWI-based Python algorithm\n    combined with avectorization component in one detection service  Beachfront fetches required Planet scene/tile analytic asset and stages for\n    processing  Beachfront processes pixels with the algorithm and provides vector output\n    of a shoreline detection.",
            "title": "Single Scene Coastline Detection Job Execution (Register and Execute an Algorithm):"
        },
        {
            "location": "/release_notes/Version2/#tide_prediction_service",
            "text": "Beachfront calls a Global Tide Prediction Service upon scene selection using\n    the centroid of the scene and time of collect in order to predict a tidal\n    height, using a 24-hour low and high value, and decorates every output\n    feature with this metadata",
            "title": "Tide Prediction Service:"
        },
        {
            "location": "/release_notes/Version2/#output_vector_data",
            "text": "Output vector metadata (at feature level) provides the following\n    attribution (and JSON types) relevant to the job it was created by:      Field  Type      id  text    job_id  text    algorithm_id  text    algorithm_name  text    algorithm_version  text    cloud_cover  number    created_by  text    created_on  text (ISO-8601 date/time)    name  text    resolution  number    scene_id  text    sensor_name  text    status  text    tide  number    tide_min_24h  number    tide_max_24h  number    time_of_collect  text (ISO-8601 date/time)    data_usage  text    classification  text",
            "title": "Output Vector Data:"
        },
        {
            "location": "/release_notes/Version2/#jobs_list",
            "text": "Jobs List provides user ability to return to view historical jobs and their\n    success/failure",
            "title": "Jobs List:"
        },
        {
            "location": "/release_notes/Version2/#performance_enhancements",
            "text": "Non-redundant processing and caching of detections, increasing\n    performance and efficiency  API micro-service refactored to achieve better maintainability, reliability,\n    and configuration integration with the deployment environment  Job executor service refactored for better horizontal scaling, increasing\n    concurrent user capacity by 3x  Decreased processing time by 3x through various performance improvements",
            "title": "Performance Enhancements:"
        },
        {
            "location": "/release_notes/Version2/#bug_fixes",
            "text": "Significant amount of work went into geting the NDWI to correct output\n    coastline vectors onto the UI.",
            "title": "Bug Fixes:"
        },
        {
            "location": "/release_notes/Version2/#features_or_functionality_retired_in_beachfront_10",
            "text": "Piazza will no longer be refer to as a separate application.  By combining\n    the two applications, the architecture was simplified. This has resulted\n    in better maintainability and faster development.",
            "title": "Features or functionality retired in Beachfront 1.0:"
        },
        {
            "location": "/release_notes/Version2/#improvements_from_previous_version",
            "text": "N/A",
            "title": "Improvements from previous version:"
        },
        {
            "location": "/release_notes/Version2/#system_requirements",
            "text": "Data exported from Beachfront 1.x is viewable in Boundless Desktop/QGIS, ArcGIS 10.3 (and later versions) with the Data Interoperability Extension, and GEOINT Viewer as GeoJSON and GeoPackage file formats  Browser requirements for the Beachfront web user interface:   Recommended:  Chrome 55 and later  Firefox 45 and later     Additional Info \nFor more information on the release, please use the Beachfront\n\u201cAsk the Expert\u201d channel.",
            "title": "System Requirements:"
        }
    ]
}